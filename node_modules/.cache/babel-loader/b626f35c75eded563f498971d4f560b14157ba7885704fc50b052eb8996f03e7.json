{"ast":null,"code":"import _slicedToArray from\"/Users/ricky/Documents/GitHub/REACT-EOS-PRODUCTS/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";//Stores and provides the data defined by AuthContext to all the components below it\nimport React,{useState}from\"react\";import{useEffect}from\"react\";import{MetadataContext}from\"context/MetadataContext\";import{METADATA_API}from\"utils/constants\";import{jsx as _jsx}from\"react/jsx-runtime\";var MetadataProvider=function MetadataProvider(_ref){var children=_ref.children;var _useState=useState(),_useState2=_slicedToArray(_useState,2),metadata=_useState2[0],setMetadata=_useState2[1];var headers={\"Content-Type\":\"application/json; charset=utf-8\"};var requestOptions={method:\"GET\",headers:headers};useEffect(function(){var response=fetch(METADATA_API,requestOptions).then(function(response){return response.json();}).then(function(result){console.log(result);setMetadata(result.reverse());});},[]);return/*#__PURE__*/_jsx(MetadataContext.Provider,{value:metadata,children:children});};export default MetadataProvider;","map":{"version":3,"names":["React","useState","useEffect","MetadataContext","METADATA_API","MetadataProvider","children","metadata","setMetadata","headers","requestOptions","method","response","fetch","then","json","result","console","log","reverse"],"sources":["/Users/ricky/Documents/GitHub/REACT-EOS-PRODUCTS/src/provider/MetadataProvider.jsx"],"sourcesContent":["//Stores and provides the data defined by AuthContext to all the components below it\n\nimport React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { MetadataContext } from \"context/MetadataContext\";\nimport { METADATA_API } from \"utils/constants\";\n\nconst MetadataProvider = ({ children }) => {\n  const [metadata, setMetadata] = useState();\n\n  const headers = {\n    \"Content-Type\": \"application/json; charset=utf-8\",\n  };\n\n  const requestOptions = {\n    method: \"GET\",\n    headers: headers,\n  };\n\n  useEffect(() => {\n    const response = fetch(METADATA_API, requestOptions)\n      .then((response) => {\n        return response.json();\n      })\n      .then((result) => {\n        console.log(result);\n        setMetadata(result.reverse());\n      });\n  }, []);\n\n  return (\n    <MetadataContext.Provider value={metadata}>\n      {children}\n    </MetadataContext.Provider>\n  );\n};\n\nexport default MetadataProvider;\n"],"mappings":"sIAAA;AAEA,MAAOA,MAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,SAAS,KAAQ,OAAO,CACjC,OAASC,eAAe,KAAQ,yBAAyB,CACzD,OAASC,YAAY,KAAQ,iBAAiB,CAAC,2CAE/C,GAAMC,iBAAgB,CAAG,QAAnBA,iBAAgB,MAAqB,IAAfC,SAAQ,MAARA,QAAQ,CAClC,cAAgCL,QAAQ,EAAE,wCAAnCM,QAAQ,eAAEC,WAAW,eAE5B,GAAMC,QAAO,CAAG,CACd,cAAc,CAAE,iCAClB,CAAC,CAED,GAAMC,eAAc,CAAG,CACrBC,MAAM,CAAE,KAAK,CACbF,OAAO,CAAEA,OACX,CAAC,CAEDP,SAAS,CAAC,UAAM,CACd,GAAMU,SAAQ,CAAGC,KAAK,CAACT,YAAY,CAAEM,cAAc,CAAC,CACjDI,IAAI,CAAC,SAACF,QAAQ,CAAK,CAClB,MAAOA,SAAQ,CAACG,IAAI,EAAE,CACxB,CAAC,CAAC,CACDD,IAAI,CAAC,SAACE,MAAM,CAAK,CAChBC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC,CACnBR,WAAW,CAACQ,MAAM,CAACG,OAAO,EAAE,CAAC,CAC/B,CAAC,CAAC,CACN,CAAC,CAAE,EAAE,CAAC,CAEN,mBACE,KAAC,eAAe,CAAC,QAAQ,EAAC,KAAK,CAAEZ,QAAS,UACvCD,QAAQ,EACgB,CAE/B,CAAC,CAED,cAAeD,iBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}