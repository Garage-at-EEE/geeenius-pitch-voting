{"ast":null,"code":"var _jsxFileName = \"/Users/ricky/Documents/GitHub/geeenius-pitch-voting/src/components/Reusables/MultiSelect.jsx\",\n  _s = $RefreshSig$();\nimport * as React from \"react\";\nimport { useTheme } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport Chip from \"@mui/material/Chip\";\nimport { useMetadataContext } from \"context/MetadataContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250\n    }\n  }\n};\nconst items = [\"Flood\", \"Earthquake\", \"Cyclone\", \"Landslides\"];\nfunction getStyles(item, itemName, theme) {\n  return {\n    fontWeight: itemName.indexOf(item) === -1 ? theme.typography.fontWeightRegular : theme.typography.fontWeightMedium\n  };\n}\nconst uniqueArray = array => Array.from(new Set(array));\nexport default function MultipleSelectChip(_ref) {\n  _s();\n  let {\n    itemName,\n    setItemName\n  } = _ref;\n  // const items = [\"Flood\", \"Earthquake\", \"Cyclone\", \"Landslides\"];\n\n  //Get unique tags\n  const metadata = useMetadataContext();\n  var nonUniqueArray = [];\n  metadata === null || metadata === void 0 ? void 0 : metadata.forEach(event_item => {\n    nonUniqueArray = nonUniqueArray.concat(event_item.event_type_tags);\n  });\n  const items = uniqueArray(nonUniqueArray);\n  const theme = useTheme();\n  const handleChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setItemName(\n    // On autofill we get a stringified value.\n    typeof value === \"string\" ? value.split(\",\") : value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(FormControl, {\n      sx: {\n        m: 1,\n        width: 300\n      },\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        id: \"demo-multiple-chip-label\",\n        children: \"Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        labelId: \"demo-multiple-chip-label\",\n        id: \"demo-multiple-chip\",\n        multiple: true,\n        style: {\n          borderRadius: \"20px\"\n        },\n        value: itemName,\n        onChange: handleChange,\n        input: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n          id: \"select-multiple-chip\",\n          label: \"Chip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 18\n        }, this),\n        renderValue: selected => /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            gap: 0.5\n          },\n          children: selected.map(value => /*#__PURE__*/_jsxDEV(Chip, {\n            label: value\n          }, value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this),\n        MenuProps: MenuProps,\n        children: items.map(item => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: item,\n          style: getStyles(item, itemName, theme),\n          children: item\n        }, item, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(MultipleSelectChip, \"v9AwL0vGeFnqe0Br7AYylCNp7ws=\", false, function () {\n  return [useMetadataContext, useTheme];\n});\n_c = MultipleSelectChip;\nvar _c;\n$RefreshReg$(_c, \"MultipleSelectChip\");","map":{"version":3,"names":["React","useTheme","Box","OutlinedInput","InputLabel","MenuItem","FormControl","Select","Chip","useMetadataContext","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","items","getStyles","item","itemName","theme","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","uniqueArray","array","Array","from","Set","MultipleSelectChip","setItemName","metadata","nonUniqueArray","forEach","event_item","concat","event_type_tags","handleChange","event","target","value","split","m","borderRadius","selected","display","flexWrap","gap","map"],"sources":["/Users/ricky/Documents/GitHub/geeenius-pitch-voting/src/components/Reusables/MultiSelect.jsx"],"sourcesContent":["import * as React from \"react\";\nimport { useTheme } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport Chip from \"@mui/material/Chip\";\nimport { useMetadataContext } from \"context/MetadataContext\";\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nconst items = [\"Flood\", \"Earthquake\", \"Cyclone\", \"Landslides\"];\n\nfunction getStyles(item, itemName, theme) {\n  return {\n    fontWeight:\n      itemName.indexOf(item) === -1\n        ? theme.typography.fontWeightRegular\n        : theme.typography.fontWeightMedium,\n  };\n}\nconst uniqueArray = (array) => Array.from(new Set(array));\n\nexport default function MultipleSelectChip({ itemName, setItemName }) {\n  // const items = [\"Flood\", \"Earthquake\", \"Cyclone\", \"Landslides\"];\n\n  //Get unique tags\n  const metadata = useMetadataContext();\n  var nonUniqueArray = [];\n  metadata?.forEach((event_item) => {\n    nonUniqueArray = nonUniqueArray.concat(event_item.event_type_tags);\n  });\n  const items = uniqueArray(nonUniqueArray);\n\n  const theme = useTheme();\n\n  const handleChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setItemName(\n      // On autofill we get a stringified value.\n      typeof value === \"string\" ? value.split(\",\") : value\n    );\n  };\n\n  return (\n    <div>\n      <FormControl sx={{ m: 1, width: 300 }}>\n        <InputLabel id=\"demo-multiple-chip-label\">Category</InputLabel>\n        <Select\n          labelId=\"demo-multiple-chip-label\"\n          id=\"demo-multiple-chip\"\n          multiple\n          style={{ borderRadius: \"20px\" }}\n          value={itemName}\n          onChange={handleChange}\n          input={<OutlinedInput id=\"select-multiple-chip\" label=\"Chip\" />}\n          renderValue={(selected) => (\n            <Box sx={{ display: \"flex\", flexWrap: \"wrap\", gap: 0.5 }}>\n              {selected.map((value) => (\n                <Chip key={value} label={value} />\n              ))}\n            </Box>\n          )}\n          MenuProps={MenuProps}\n        >\n          {items.map((item) => (\n            <MenuItem\n              key={item}\n              value={item}\n              style={getStyles(item, itemName, theme)}\n            >\n              {item}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}