{"ast":null,"code":"import*as React from\"react\";import{useTheme}from\"@mui/material/styles\";import Box from\"@mui/material/Box\";import OutlinedInput from\"@mui/material/OutlinedInput\";import InputLabel from\"@mui/material/InputLabel\";import MenuItem from\"@mui/material/MenuItem\";import FormControl from\"@mui/material/FormControl\";import Select from\"@mui/material/Select\";import Chip from\"@mui/material/Chip\";import{useMetadataContext}from\"context/MetadataContext\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ITEM_HEIGHT=48;var ITEM_PADDING_TOP=8;var MenuProps={PaperProps:{style:{maxHeight:ITEM_HEIGHT*4.5+ITEM_PADDING_TOP,width:250}}};var items=[\"Flood\",\"Earthquake\",\"Cyclone\",\"Landslides\"];function getStyles(item,itemName,theme){return{fontWeight:itemName.indexOf(item)===-1?theme.typography.fontWeightRegular:theme.typography.fontWeightMedium};}var uniqueArray=function uniqueArray(array){return Array.from(new Set(array));};export default function MultipleSelectChip(_ref){var itemName=_ref.itemName,setItemName=_ref.setItemName;// const items = [\"Flood\", \"Earthquake\", \"Cyclone\", \"Landslides\"];\n//Get unique tags\nvar metadata=useMetadataContext();var nonUniqueArray=[];metadata===null||metadata===void 0?void 0:metadata.forEach(function(event_item){nonUniqueArray=nonUniqueArray.concat(event_item.event_type_tags);});var items=uniqueArray(nonUniqueArray);var theme=useTheme();var handleChange=function handleChange(event){var value=event.target.value;setItemName(// On autofill we get a stringified value.\ntypeof value===\"string\"?value.split(\",\"):value);};return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(FormControl,{sx:{m:1,width:300},children:[/*#__PURE__*/_jsx(InputLabel,{id:\"demo-multiple-chip-label\",children:\"Category\"}),/*#__PURE__*/_jsx(Select,{labelId:\"demo-multiple-chip-label\",id:\"demo-multiple-chip\",multiple:true,style:{borderRadius:\"20px\"},value:itemName,onChange:handleChange,input:/*#__PURE__*/_jsx(OutlinedInput,{id:\"select-multiple-chip\",label:\"Chip\"}),renderValue:function renderValue(selected){return/*#__PURE__*/_jsx(Box,{sx:{display:\"flex\",flexWrap:\"wrap\",gap:0.5},children:selected.map(function(value){return/*#__PURE__*/_jsx(Chip,{label:value},value);})});},MenuProps:MenuProps,children:items.map(function(item){return/*#__PURE__*/_jsx(MenuItem,{value:item,style:getStyles(item,itemName,theme),children:item},item);})})]})});}","map":{"version":3,"names":["React","useTheme","Box","OutlinedInput","InputLabel","MenuItem","FormControl","Select","Chip","useMetadataContext","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","items","getStyles","item","itemName","theme","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","uniqueArray","array","Array","from","Set","MultipleSelectChip","setItemName","metadata","nonUniqueArray","forEach","event_item","concat","event_type_tags","handleChange","event","value","target","split","m","borderRadius","selected","display","flexWrap","gap","map"],"sources":["/Users/ricky/Documents/GitHub/REACT-EOS-PRODUCTS/src/components/Reusables/MultiSelect.jsx"],"sourcesContent":["import * as React from \"react\";\nimport { useTheme } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport Chip from \"@mui/material/Chip\";\nimport { useMetadataContext } from \"context/MetadataContext\";\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nconst items = [\"Flood\", \"Earthquake\", \"Cyclone\", \"Landslides\"];\n\nfunction getStyles(item, itemName, theme) {\n  return {\n    fontWeight:\n      itemName.indexOf(item) === -1\n        ? theme.typography.fontWeightRegular\n        : theme.typography.fontWeightMedium,\n  };\n}\nconst uniqueArray = (array) => Array.from(new Set(array));\n\nexport default function MultipleSelectChip({ itemName, setItemName }) {\n  // const items = [\"Flood\", \"Earthquake\", \"Cyclone\", \"Landslides\"];\n\n  //Get unique tags\n  const metadata = useMetadataContext();\n  var nonUniqueArray = [];\n  metadata?.forEach((event_item) => {\n    nonUniqueArray = nonUniqueArray.concat(event_item.event_type_tags);\n  });\n  const items = uniqueArray(nonUniqueArray);\n\n  const theme = useTheme();\n\n  const handleChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setItemName(\n      // On autofill we get a stringified value.\n      typeof value === \"string\" ? value.split(\",\") : value\n    );\n  };\n\n  return (\n    <div>\n      <FormControl sx={{ m: 1, width: 300 }}>\n        <InputLabel id=\"demo-multiple-chip-label\">Category</InputLabel>\n        <Select\n          labelId=\"demo-multiple-chip-label\"\n          id=\"demo-multiple-chip\"\n          multiple\n          style={{ borderRadius: \"20px\" }}\n          value={itemName}\n          onChange={handleChange}\n          input={<OutlinedInput id=\"select-multiple-chip\" label=\"Chip\" />}\n          renderValue={(selected) => (\n            <Box sx={{ display: \"flex\", flexWrap: \"wrap\", gap: 0.5 }}>\n              {selected.map((value) => (\n                <Chip key={value} label={value} />\n              ))}\n            </Box>\n          )}\n          MenuProps={MenuProps}\n        >\n          {items.map((item) => (\n            <MenuItem\n              key={item}\n              value={item}\n              style={getStyles(item, itemName, theme)}\n            >\n              {item}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}