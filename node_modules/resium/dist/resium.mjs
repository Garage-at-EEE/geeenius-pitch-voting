var Fi = Object.defineProperty;
var Ii = (i, e, t) => e in i ? Fi(i, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) : i[e] = t;
var z = (i, e, t) => (Ii(i, typeof e != "symbol" ? e + "" : e, t), t);
import li, { createContext as Wi, useContext as Vi, useRef as W, useEffect as ne, useState as ui, useCallback as Oe, useLayoutEffect as Ui, useImperativeHandle as ji, forwardRef as di, useMemo as Hi } from "react";
import { ScreenSpaceEventType as $, ScreenSpaceEventHandler as mi, Event as Xe, BillboardCollection as xi, BillboardGraphics as zi, BoxGraphics as Ni, Cesium3DTileset as Yi, Cesium3DTilesetGraphics as Ki, CesiumWidget as qi, ClassificationPrimitive as Ji, CloudCollection as Zi, CorridorGraphics as Xi, CustomDataSource as Qi, CylinderGraphics as et, CzmlDataSource as it, EllipseGraphics as tt, EllipsoidGraphics as nt, Entity as ot, Fog as Qe, GeoJsonDataSource as rt, GroundPolylinePrimitive as st, GroundPrimitive as at, ImageryLayer as ct, KmlDataSource as lt, LabelCollection as ut, LabelGraphics as dt, Model as mt, ModelGraphics as ft, Moon as ei, ParticleSystem as ht, PathGraphics as pt, PlaneGraphics as yt, PointGraphics as vt, PointPrimitiveCollection as gt, PolygonGraphics as Ct, PolylineCollection as Pt, PolylineGraphics as St, PolylineVolumeGraphics as Et, PostProcessStage as bt, PostProcessStageLibrary as N, PostProcessStageComposite as wt, Primitive as Dt, RectangleGraphics as Rt, SceneMode as Ge, Sun as ii, TimeDynamicPointCloud as $t, Viewer as Tt, WallGraphics as Mt } from "cesium";
import { createPortal as kt } from "react-dom";
const Ae = Wi({}), { Provider: hs, Consumer: _t } = Ae, Ee = () => Vi(Ae) || {}, be = (i, e) => {
  const t = (o) => {
    const s = Ee(), d = W(), g = W(!1);
    return ne(() => () => {
      s.camera && o.cancelFlightOnUnmount && s.camera.cancelFlight();
    }, [s.camera, o.cancelFlightOnUnmount]), ne(() => {
      s.camera && s.scene && !s.scene.isDestroyed() && (!o.once || !g.current) && (s.camera.cancelFlight(), e(s.camera, o, d.current), g.current = !0), d.current = o;
    }), null;
  };
  return t.displayName = i, t;
};
var Se = {}, Ot = {
  get exports() {
    return Se;
  },
  set exports(i) {
    Se = i;
  }
}, ce = {};
/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var ti;
function Gt() {
  if (ti)
    return ce;
  ti = 1;
  var i = li, e = Symbol.for("react.element"), t = Symbol.for("react.fragment"), o = Object.prototype.hasOwnProperty, s = i.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner, d = { key: !0, ref: !0, __self: !0, __source: !0 };
  function g(C, u, S) {
    var v, T = {}, k = null, h = null;
    S !== void 0 && (k = "" + S), u.key !== void 0 && (k = "" + u.key), u.ref !== void 0 && (h = u.ref);
    for (v in u)
      o.call(u, v) && !d.hasOwnProperty(v) && (T[v] = u[v]);
    if (C && C.defaultProps)
      for (v in u = C.defaultProps, u)
        T[v] === void 0 && (T[v] = u[v]);
    return { $$typeof: e, type: C, key: k, ref: h, props: T, _owner: s.current };
  }
  return ce.Fragment = t, ce.jsx = g, ce.jsxs = g, ce;
}
var le = {};
/**
 * @license React
 * react-jsx-runtime.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var ni;
function Lt() {
  return ni || (ni = 1, process.env.NODE_ENV !== "production" && function() {
    var i = li, e = Symbol.for("react.element"), t = Symbol.for("react.portal"), o = Symbol.for("react.fragment"), s = Symbol.for("react.strict_mode"), d = Symbol.for("react.profiler"), g = Symbol.for("react.provider"), C = Symbol.for("react.context"), u = Symbol.for("react.forward_ref"), S = Symbol.for("react.suspense"), v = Symbol.for("react.suspense_list"), T = Symbol.for("react.memo"), k = Symbol.for("react.lazy"), h = Symbol.for("react.offscreen"), _ = Symbol.iterator, U = "@@iterator";
    function Y(n) {
      if (n === null || typeof n != "object")
        return null;
      var r = _ && n[_] || n[U];
      return typeof r == "function" ? r : null;
    }
    var O = i.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
    function P(n) {
      {
        for (var r = arguments.length, a = new Array(r > 1 ? r - 1 : 0), l = 1; l < r; l++)
          a[l - 1] = arguments[l];
        oe("error", n, a);
      }
    }
    function oe(n, r, a) {
      {
        var l = O.ReactDebugCurrentFrame, p = l.getStackAddendum();
        p !== "" && (r += "%s", a = a.concat([p]));
        var y = a.map(function(f) {
          return String(f);
        });
        y.unshift("Warning: " + r), Function.prototype.apply.call(console[n], console, y);
      }
    }
    var fe = !1, q = !1, re = !1, J = !1, se = !1, Z;
    Z = Symbol.for("react.module.reference");
    function he(n) {
      return !!(typeof n == "string" || typeof n == "function" || n === o || n === d || se || n === s || n === S || n === v || J || n === h || fe || q || re || typeof n == "object" && n !== null && (n.$$typeof === k || n.$$typeof === T || n.$$typeof === g || n.$$typeof === C || n.$$typeof === u || // This needs to include all possible module reference object
      // types supported by any Flight configuration anywhere since
      // we don't know which Flight build this will end up being used
      // with.
      n.$$typeof === Z || n.getModuleId !== void 0));
    }
    function pe(n, r, a) {
      var l = n.displayName;
      if (l)
        return l;
      var p = r.displayName || r.name || "";
      return p !== "" ? a + "(" + p + ")" : a;
    }
    function E(n) {
      return n.displayName || "Context";
    }
    function b(n) {
      if (n == null)
        return null;
      if (typeof n.tag == "number" && P("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."), typeof n == "function")
        return n.displayName || n.name || null;
      if (typeof n == "string")
        return n;
      switch (n) {
        case o:
          return "Fragment";
        case t:
          return "Portal";
        case d:
          return "Profiler";
        case s:
          return "StrictMode";
        case S:
          return "Suspense";
        case v:
          return "SuspenseList";
      }
      if (typeof n == "object")
        switch (n.$$typeof) {
          case C:
            var r = n;
            return E(r) + ".Consumer";
          case g:
            var a = n;
            return E(a._context) + ".Provider";
          case u:
            return pe(n, n.render, "ForwardRef");
          case T:
            var l = n.displayName || null;
            return l !== null ? l : b(n.type) || "Memo";
          case k: {
            var p = n, y = p._payload, f = p._init;
            try {
              return b(f(y));
            } catch {
              return null;
            }
          }
        }
      return null;
    }
    var M = Object.assign, A = 0, I, G, j, H, D, X, x;
    function Q() {
    }
    Q.__reactDisabledLog = !0;
    function K() {
      {
        if (A === 0) {
          I = console.log, G = console.info, j = console.warn, H = console.error, D = console.group, X = console.groupCollapsed, x = console.groupEnd;
          var n = {
            configurable: !0,
            enumerable: !0,
            value: Q,
            writable: !0
          };
          Object.defineProperties(console, {
            info: n,
            log: n,
            warn: n,
            error: n,
            group: n,
            groupCollapsed: n,
            groupEnd: n
          });
        }
        A++;
      }
    }
    function fi() {
      {
        if (A--, A === 0) {
          var n = {
            configurable: !0,
            enumerable: !0,
            writable: !0
          };
          Object.defineProperties(console, {
            log: M({}, n, {
              value: I
            }),
            info: M({}, n, {
              value: G
            }),
            warn: M({}, n, {
              value: j
            }),
            error: M({}, n, {
              value: H
            }),
            group: M({}, n, {
              value: D
            }),
            groupCollapsed: M({}, n, {
              value: X
            }),
            groupEnd: M({}, n, {
              value: x
            })
          });
        }
        A < 0 && P("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
      }
    }
    var we = O.ReactCurrentDispatcher, De;
    function ye(n, r, a) {
      {
        if (De === void 0)
          try {
            throw Error();
          } catch (p) {
            var l = p.stack.trim().match(/\n( *(at )?)/);
            De = l && l[1] || "";
          }
        return `
` + De + n;
      }
    }
    var Re = !1, ve;
    {
      var hi = typeof WeakMap == "function" ? WeakMap : Map;
      ve = new hi();
    }
    function Ie(n, r) {
      if (!n || Re)
        return "";
      {
        var a = ve.get(n);
        if (a !== void 0)
          return a;
      }
      var l;
      Re = !0;
      var p = Error.prepareStackTrace;
      Error.prepareStackTrace = void 0;
      var y;
      y = we.current, we.current = null, K();
      try {
        if (r) {
          var f = function() {
            throw Error();
          };
          if (Object.defineProperty(f.prototype, "props", {
            set: function() {
              throw Error();
            }
          }), typeof Reflect == "object" && Reflect.construct) {
            try {
              Reflect.construct(f, []);
            } catch (V) {
              l = V;
            }
            Reflect.construct(n, [], f);
          } else {
            try {
              f.call();
            } catch (V) {
              l = V;
            }
            n.call(f.prototype);
          }
        } else {
          try {
            throw Error();
          } catch (V) {
            l = V;
          }
          n();
        }
      } catch (V) {
        if (V && l && typeof V.stack == "string") {
          for (var m = V.stack.split(`
`), L = l.stack.split(`
`), w = m.length - 1, R = L.length - 1; w >= 1 && R >= 0 && m[w] !== L[R]; )
            R--;
          for (; w >= 1 && R >= 0; w--, R--)
            if (m[w] !== L[R]) {
              if (w !== 1 || R !== 1)
                do
                  if (w--, R--, R < 0 || m[w] !== L[R]) {
                    var B = `
` + m[w].replace(" at new ", " at ");
                    return n.displayName && B.includes("<anonymous>") && (B = B.replace("<anonymous>", n.displayName)), typeof n == "function" && ve.set(n, B), B;
                  }
                while (w >= 1 && R >= 0);
              break;
            }
        }
      } finally {
        Re = !1, we.current = y, fi(), Error.prepareStackTrace = p;
      }
      var ie = n ? n.displayName || n.name : "", Ze = ie ? ye(ie) : "";
      return typeof n == "function" && ve.set(n, Ze), Ze;
    }
    function pi(n, r, a) {
      return Ie(n, !1);
    }
    function yi(n) {
      var r = n.prototype;
      return !!(r && r.isReactComponent);
    }
    function ge(n, r, a) {
      if (n == null)
        return "";
      if (typeof n == "function")
        return Ie(n, yi(n));
      if (typeof n == "string")
        return ye(n);
      switch (n) {
        case S:
          return ye("Suspense");
        case v:
          return ye("SuspenseList");
      }
      if (typeof n == "object")
        switch (n.$$typeof) {
          case u:
            return pi(n.render);
          case T:
            return ge(n.type, r, a);
          case k: {
            var l = n, p = l._payload, y = l._init;
            try {
              return ge(y(p), r, a);
            } catch {
            }
          }
        }
      return "";
    }
    var Ce = Object.prototype.hasOwnProperty, We = {}, Ve = O.ReactDebugCurrentFrame;
    function Pe(n) {
      if (n) {
        var r = n._owner, a = ge(n.type, n._source, r ? r.type : null);
        Ve.setExtraStackFrame(a);
      } else
        Ve.setExtraStackFrame(null);
    }
    function vi(n, r, a, l, p) {
      {
        var y = Function.call.bind(Ce);
        for (var f in n)
          if (y(n, f)) {
            var m = void 0;
            try {
              if (typeof n[f] != "function") {
                var L = Error((l || "React class") + ": " + a + " type `" + f + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof n[f] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                throw L.name = "Invariant Violation", L;
              }
              m = n[f](r, f, l, a, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
            } catch (w) {
              m = w;
            }
            m && !(m instanceof Error) && (Pe(p), P("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", l || "React class", a, f, typeof m), Pe(null)), m instanceof Error && !(m.message in We) && (We[m.message] = !0, Pe(p), P("Failed %s type: %s", a, m.message), Pe(null));
          }
      }
    }
    var gi = Array.isArray;
    function $e(n) {
      return gi(n);
    }
    function Ci(n) {
      {
        var r = typeof Symbol == "function" && Symbol.toStringTag, a = r && n[Symbol.toStringTag] || n.constructor.name || "Object";
        return a;
      }
    }
    function Pi(n) {
      try {
        return Ue(n), !1;
      } catch {
        return !0;
      }
    }
    function Ue(n) {
      return "" + n;
    }
    function je(n) {
      if (Pi(n))
        return P("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", Ci(n)), Ue(n);
    }
    var ae = O.ReactCurrentOwner, Si = {
      key: !0,
      ref: !0,
      __self: !0,
      __source: !0
    }, He, xe, Te;
    Te = {};
    function Ei(n) {
      if (Ce.call(n, "ref")) {
        var r = Object.getOwnPropertyDescriptor(n, "ref").get;
        if (r && r.isReactWarning)
          return !1;
      }
      return n.ref !== void 0;
    }
    function bi(n) {
      if (Ce.call(n, "key")) {
        var r = Object.getOwnPropertyDescriptor(n, "key").get;
        if (r && r.isReactWarning)
          return !1;
      }
      return n.key !== void 0;
    }
    function wi(n, r) {
      if (typeof n.ref == "string" && ae.current && r && ae.current.stateNode !== r) {
        var a = b(ae.current.type);
        Te[a] || (P('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', b(ae.current.type), n.ref), Te[a] = !0);
      }
    }
    function Di(n, r) {
      {
        var a = function() {
          He || (He = !0, P("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", r));
        };
        a.isReactWarning = !0, Object.defineProperty(n, "key", {
          get: a,
          configurable: !0
        });
      }
    }
    function Ri(n, r) {
      {
        var a = function() {
          xe || (xe = !0, P("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", r));
        };
        a.isReactWarning = !0, Object.defineProperty(n, "ref", {
          get: a,
          configurable: !0
        });
      }
    }
    var $i = function(n, r, a, l, p, y, f) {
      var m = {
        // This tag allows us to uniquely identify this as a React Element
        $$typeof: e,
        // Built-in properties that belong on the element
        type: n,
        key: r,
        ref: a,
        props: f,
        // Record the component responsible for creating this element.
        _owner: y
      };
      return m._store = {}, Object.defineProperty(m._store, "validated", {
        configurable: !1,
        enumerable: !1,
        writable: !0,
        value: !1
      }), Object.defineProperty(m, "_self", {
        configurable: !1,
        enumerable: !1,
        writable: !1,
        value: l
      }), Object.defineProperty(m, "_source", {
        configurable: !1,
        enumerable: !1,
        writable: !1,
        value: p
      }), Object.freeze && (Object.freeze(m.props), Object.freeze(m)), m;
    };
    function Ti(n, r, a, l, p) {
      {
        var y, f = {}, m = null, L = null;
        a !== void 0 && (je(a), m = "" + a), bi(r) && (je(r.key), m = "" + r.key), Ei(r) && (L = r.ref, wi(r, p));
        for (y in r)
          Ce.call(r, y) && !Si.hasOwnProperty(y) && (f[y] = r[y]);
        if (n && n.defaultProps) {
          var w = n.defaultProps;
          for (y in w)
            f[y] === void 0 && (f[y] = w[y]);
        }
        if (m || L) {
          var R = typeof n == "function" ? n.displayName || n.name || "Unknown" : n;
          m && Di(f, R), L && Ri(f, R);
        }
        return $i(n, m, L, p, l, ae.current, f);
      }
    }
    var Me = O.ReactCurrentOwner, ze = O.ReactDebugCurrentFrame;
    function ee(n) {
      if (n) {
        var r = n._owner, a = ge(n.type, n._source, r ? r.type : null);
        ze.setExtraStackFrame(a);
      } else
        ze.setExtraStackFrame(null);
    }
    var ke;
    ke = !1;
    function _e(n) {
      return typeof n == "object" && n !== null && n.$$typeof === e;
    }
    function Ne() {
      {
        if (Me.current) {
          var n = b(Me.current.type);
          if (n)
            return `

Check the render method of \`` + n + "`.";
        }
        return "";
      }
    }
    function Mi(n) {
      {
        if (n !== void 0) {
          var r = n.fileName.replace(/^.*[\\\/]/, ""), a = n.lineNumber;
          return `

Check your code at ` + r + ":" + a + ".";
        }
        return "";
      }
    }
    var Ye = {};
    function ki(n) {
      {
        var r = Ne();
        if (!r) {
          var a = typeof n == "string" ? n : n.displayName || n.name;
          a && (r = `

Check the top-level render call using <` + a + ">.");
        }
        return r;
      }
    }
    function Ke(n, r) {
      {
        if (!n._store || n._store.validated || n.key != null)
          return;
        n._store.validated = !0;
        var a = ki(r);
        if (Ye[a])
          return;
        Ye[a] = !0;
        var l = "";
        n && n._owner && n._owner !== Me.current && (l = " It was passed a child from " + b(n._owner.type) + "."), ee(n), P('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', a, l), ee(null);
      }
    }
    function qe(n, r) {
      {
        if (typeof n != "object")
          return;
        if ($e(n))
          for (var a = 0; a < n.length; a++) {
            var l = n[a];
            _e(l) && Ke(l, r);
          }
        else if (_e(n))
          n._store && (n._store.validated = !0);
        else if (n) {
          var p = Y(n);
          if (typeof p == "function" && p !== n.entries)
            for (var y = p.call(n), f; !(f = y.next()).done; )
              _e(f.value) && Ke(f.value, r);
        }
      }
    }
    function _i(n) {
      {
        var r = n.type;
        if (r == null || typeof r == "string")
          return;
        var a;
        if (typeof r == "function")
          a = r.propTypes;
        else if (typeof r == "object" && (r.$$typeof === u || // Note: Memo only checks outer props here.
        // Inner props are checked in the reconciler.
        r.$$typeof === T))
          a = r.propTypes;
        else
          return;
        if (a) {
          var l = b(r);
          vi(a, n.props, "prop", l, n);
        } else if (r.PropTypes !== void 0 && !ke) {
          ke = !0;
          var p = b(r);
          P("Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?", p || "Unknown");
        }
        typeof r.getDefaultProps == "function" && !r.getDefaultProps.isReactClassApproved && P("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.");
      }
    }
    function Oi(n) {
      {
        for (var r = Object.keys(n.props), a = 0; a < r.length; a++) {
          var l = r[a];
          if (l !== "children" && l !== "key") {
            ee(n), P("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", l), ee(null);
            break;
          }
        }
        n.ref !== null && (ee(n), P("Invalid attribute `ref` supplied to `React.Fragment`."), ee(null));
      }
    }
    function Je(n, r, a, l, p, y) {
      {
        var f = he(n);
        if (!f) {
          var m = "";
          (n === void 0 || typeof n == "object" && n !== null && Object.keys(n).length === 0) && (m += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.");
          var L = Mi(p);
          L ? m += L : m += Ne();
          var w;
          n === null ? w = "null" : $e(n) ? w = "array" : n !== void 0 && n.$$typeof === e ? (w = "<" + (b(n.type) || "Unknown") + " />", m = " Did you accidentally export a JSX literal instead of a component?") : w = typeof n, P("React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", w, m);
        }
        var R = Ti(n, r, a, p, y);
        if (R == null)
          return R;
        if (f) {
          var B = r.children;
          if (B !== void 0)
            if (l)
              if ($e(B)) {
                for (var ie = 0; ie < B.length; ie++)
                  qe(B[ie], n);
                Object.freeze && Object.freeze(B);
              } else
                P("React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.");
            else
              qe(B, n);
        }
        return n === o ? Oi(R) : _i(R), R;
      }
    }
    function Gi(n, r, a) {
      return Je(n, r, a, !0);
    }
    function Li(n, r, a) {
      return Je(n, r, a, !1);
    }
    var Bi = Li, Ai = Gi;
    le.Fragment = o, le.jsx = Bi, le.jsxs = Ai;
  }()), le;
}
(function(i) {
  process.env.NODE_ENV === "production" ? i.exports = Gt() : i.exports = Lt();
})(Ot);
const Bt = Se.Fragment, ue = Se.jsx;
function At(i, e) {
  return e ? Le(i).reduce((t, [o, s]) => (me(e, o) && (t[o] = s), t), {}) : {};
}
function Le(i) {
  return Object.keys(i).map((e) => [e, i[e]]);
}
function me(i, e) {
  return !!i && i.indexOf(e) !== -1;
}
function Ft(i, e) {
  return !!i && !!e && [...Object.keys(i), ...Object.keys(e)].every((t) => i[t] === e[t]);
}
function It(i) {
  return i && typeof i.isDestroyed == "function" && typeof i.destroy == "function";
}
function Wt(i) {
  return It(i) && i.isDestroyed();
}
const te = "__RESIUM_EVENT_MANAGER", Be = [
  "onClick",
  "onDoubleClick",
  "onMouseDown",
  "onMouseUp",
  "onMiddleClick",
  "onMiddleDown",
  "onMiddleUp",
  "onMouseMove",
  "onPinchEnd",
  "onPinchMove",
  "onPinchStart",
  "onRightClick",
  "onRightDown",
  "onRightUp",
  "onWheel",
  "onMouseEnter",
  "onMouseLeave"
], Fe = class {
  constructor(e) {
    z(this, "scene");
    z(this, "sshe");
    z(this, "events", {
      onClick: /* @__PURE__ */ new Map(),
      onDoubleClick: /* @__PURE__ */ new Map(),
      onMouseDown: /* @__PURE__ */ new Map(),
      onMouseUp: /* @__PURE__ */ new Map(),
      onMiddleClick: /* @__PURE__ */ new Map(),
      onMiddleDown: /* @__PURE__ */ new Map(),
      onMiddleUp: /* @__PURE__ */ new Map(),
      onMouseMove: /* @__PURE__ */ new Map(),
      onPinchEnd: /* @__PURE__ */ new Map(),
      onPinchMove: /* @__PURE__ */ new Map(),
      onPinchStart: /* @__PURE__ */ new Map(),
      onRightClick: /* @__PURE__ */ new Map(),
      onRightDown: /* @__PURE__ */ new Map(),
      onRightUp: /* @__PURE__ */ new Map(),
      onWheel: /* @__PURE__ */ new Map(),
      onMouseEnter: /* @__PURE__ */ new Map(),
      onMouseLeave: /* @__PURE__ */ new Map()
    });
    z(this, "hovered");
    z(this, "onMouseMove", (e) => {
      var o, s, d, g, C, u;
      const t = this.pick(e.endPosition);
      this.hovered !== t && (this.hovered && ((o = this.getEventCallback("onMouseLeave", this.hovered)) == null || o(e, this.hovered), (s = this.getEventCallback("onMouseLeave", null)) == null || s(e, this.hovered)), t && ((d = this.getEventCallback("onMouseEnter", t)) == null || d(e, t), (g = this.getEventCallback("onMouseEnter", null)) == null || g(e, t))), t && ((C = this.getEventCallback("onMouseMove", t)) == null || C(e, t)), (u = this.getEventCallback("onMouseMove", null)) == null || u(e, t), this.hovered = t;
    });
    z(this, "eventCallback", (e) => (t) => {
      var s, d;
      const o = this.pick(t == null ? void 0 : t.position);
      o && ((s = this.getEventCallback(e, o)) == null || s(t, o)), (d = this.getEventCallback(e, null)) == null || d(t, o);
    });
    this.scene = e, this.sshe = new mi(e == null ? void 0 : e.canvas);
  }
  destroy() {
    this.hovered = void 0, this.sshe.isDestroyed() || this.sshe.destroy();
  }
  isDestroyed() {
    return this.sshe.isDestroyed();
  }
  on(e, t, o) {
    e && t === "onWheel" || this.events[t].set(e, o);
  }
  off(e, t) {
    this.events[t].delete(e), this.hovered === e && (this.hovered = void 0);
  }
  setEvents(e, t) {
    Le(t).forEach(([o, s]) => {
      const d = o;
      me(Be, d) && (s ? this.on(e, d, s) : this.off(e, d));
    }), this.commit();
  }
  clearEvents(e) {
    this.hovered = void 0, Be.forEach((t) => {
      this.off(e, t);
    }), this.commit();
  }
  commit() {
    const e = this.sshe, t = this.sshe.isDestroyed();
    t || (this.events.onMouseEnter.size === 0 && this.events.onMouseLeave.size === 0 && this.events.onMouseMove.size === 0 ? this.sshe.removeInputAction($.MOUSE_MOVE) : this.sshe.getInputAction($.MOUSE_MOVE) || this.sshe.setInputAction(this.onMouseMove, $.MOUSE_MOVE)), Le(this.events).forEach(([o, s]) => {
      if (o === "onMouseEnter" || o === "onMouseLeave" || o === "onMouseMove")
        return;
      const d = Fe.eventTypeMap[o];
      t || (s.size === 0 ? e.removeInputAction(d) : e.getInputAction(d) || e.setInputAction(this.eventCallback(o), d));
    });
  }
  getScreenSpaceEventHandler() {
    return this.sshe;
  }
  getEventCallback(e, t) {
    var o, s;
    return t === null ? this.events[e].get(null) : this.events[e].get(t.id) || // Entity
    this.events[e].get((s = (o = t.id) == null ? void 0 : o.entityCollection) == null ? void 0 : s.owner) || // Entity in DataSource
    this.events[e].get(t.primitive) || // Primitive
    this.events[e].get(t.tileset);
  }
  pick(e) {
    var t;
    if (e)
      return (t = this.scene) == null ? void 0 : t.pick(e);
  }
};
let de = Fe;
z(de, "eventTypeMap", {
  onClick: $.LEFT_CLICK,
  onDoubleClick: $.LEFT_DOUBLE_CLICK,
  onMouseDown: $.LEFT_DOWN,
  onMouseUp: $.LEFT_UP,
  onMiddleClick: $.MIDDLE_CLICK,
  onMiddleDown: $.MIDDLE_DOWN,
  onMiddleUp: $.MIDDLE_UP,
  onMouseMove: $.MOUSE_MOVE,
  onPinchEnd: $.PINCH_END,
  onPinchMove: $.PINCH_MOVE,
  onPinchStart: $.PINCH_START,
  onRightClick: $.RIGHT_CLICK,
  onRightDown: $.RIGHT_DOWN,
  onRightUp: $.RIGHT_UP,
  onWheel: $.WHEEL,
  onMouseEnter: $.MOUSE_MOVE,
  onMouseLeave: $.MOUSE_MOVE
});
const Vt = ({
  name: i,
  create: e,
  destroy: t,
  provide: o,
  update: s,
  cesiumReadonlyProps: d,
  cesiumEventProps: g,
  otherProps: C,
  setCesiumPropsAfterCreate: u,
  useCommonEvent: S,
  useRootEvent: v
}, T, k) => {
  const h = W(), _ = Ee(), U = W(o ? {} : void 0), Y = W({}), O = W(oi(T)), P = W({}), [oe, fe] = ui(!1), q = W(!1), re = W(null), J = W(), se = _ == null ? void 0 : _[te], Z = Oe(
    (E) => {
      var H;
      if (!h.current)
        return;
      const b = h.current, M = Object.keys(E), A = Object.keys(g || []), I = M.concat(
        Object.keys(P.current).filter((D) => !M.includes(D))
      ).filter((D) => P.current[D] !== E[D]).map((D) => [D, P.current[D], E[D]]), G = [];
      for (const [D, X, x] of I)
        if (d != null && d.includes(D))
          G.push(D);
        else if (me(A, D)) {
          const Q = g == null ? void 0 : g[D], K = b[Q];
          K instanceof Xe && (typeof X > "u" ? (K.addEventListener(x), Y.current[Q] = x) : typeof x > "u" ? (K.removeEventListener(X), delete Y.current[Q]) : (K.removeEventListener(X), K.addEventListener(x)));
        } else
          D !== "children" && !Be.includes(D) && !(C != null && C.includes(D)) && (b[D] = x);
      const j = v ? (H = U.current) == null ? void 0 : H[te] : se;
      S && j && h.current && j.setEvents(v ? null : h.current, E), s && q.current && s(h.current, E, P.current, _), P.current = E, O.current = E, q.current && G.length > 0 && (process.env.NODE_ENV !== "production" && console.warn(
        `Warning: <${i}> is recreated because following read-only props have been updated: ${G.join(
          ", "
        )}`
      ), pe(), he());
    },
    []
    // eslint-disable-line react-hooks/exhaustive-deps
  ), he = Oe(() => {
    var M;
    const E = e == null ? void 0 : e(_, O.current, re.current);
    if (Array.isArray(E) ? (h.current = E[0], J.current = E[1]) : h.current = E, u)
      Z(O.current);
    else {
      if (h.current && g) {
        const A = h.current;
        for (const I of Object.keys(O.current)) {
          const G = g[I];
          if (G) {
            const j = O.current[I], H = A[G];
            j && H instanceof Xe && H.addEventListener(j);
          }
        }
      }
      P.current = O.current;
    }
    o && h.current && (U.current = {
      ..._,
      ...o(h.current, _, T, J.current)
    });
    const b = v ? (M = U.current) == null ? void 0 : M[te] : se;
    S && b && h.current && b.setEvents(v ? null : h.current, O.current);
  }, []), pe = Oe(() => {
    var b, M;
    h.current && t && t(h.current, _, re.current, J.current);
    const E = v ? (b = U.current) == null ? void 0 : b[te] : se;
    if (S && E && h.current && E.clearEvents(v ? null : h.current), h.current && !Wt(h.current)) {
      const A = Object.keys(Y.current);
      for (const I of A) {
        const G = h.current[I];
        (M = G == null ? void 0 : G.removeEventListener) == null || M.call(G, Y.current[I]);
      }
    }
    Y.current = {}, U.current = void 0, J.current = void 0, h.current = void 0, fe(!1), q.current = !1;
  }, []);
  return Ui(() => (he(), () => pe()), []), ne(() => {
    var b, M;
    const E = oi(T);
    oe ? Ft(E, P.current) || (Z(E), (M = (b = _.__$internal) == null ? void 0 : b.onUpdate) == null || M.call(b)) : (P.current = E, O.current = E, fe(!0), q.current = !0);
  }, [_.__$internal, oe, T, Z]), ji(k, () => ({
    cesiumElement: h.current
  })), [U.current, oe, re];
};
function oi(i) {
  const { children: e, ...t } = i;
  return t;
}
const c = ({
  renderContainer: i,
  noChildren: e,
  containerProps: t,
  defaultProps: o,
  ...s
}) => {
  const d = (g, C) => {
    const u = {
      ...o,
      ...g
    }, [S, v, T] = Vt(
      s,
      u,
      C
    );
    if (e)
      return null;
    const k = v && "children" in u ? u.children : null, h = i ? /* @__PURE__ */ ue(
      "div",
      {
        "data-testid": "resium-container",
        ref: T,
        ...typeof t == "function" ? t(u) : At(u, t),
        children: k
      }
    ) : k ? /* @__PURE__ */ ue(Bt, { children: k }) : null;
    return S ? /* @__PURE__ */ ue(Ae.Provider, { value: S, children: h }) : h;
  };
  return d.displayName = s.name, di(d);
}, Ut = ["enabled", "selected"], F = (i) => c({
  name: i.name,
  create(e, t) {
    if (!e.scene)
      return;
    const o = i.create(t, e.scene.postProcessStages);
    return typeof t.enabled == "boolean" && (o.enabled = t.enabled), t.selected && "selected" in o && (o.selected = t.selected), i.props.forEach((s) => {
      !me(i.readonlyProps, s) && typeof t[s] < "u" && (o.uniforms[s] = t[s]);
    }), !i.noMount && e.scene && !e.scene.isDestroyed() && e.scene.postProcessStages.add(o), o;
  },
  destroy(e, t) {
    i.noMount ? e.enabled = !1 : (t.scene && !t.scene.isDestroyed() && t.scene.postProcessStages.remove(e), e.isDestroyed() || e.destroy());
  },
  update(e, t, o) {
    i.props.forEach((s) => {
      !me(i.readonlyProps, s) && t[s] !== o[s] && (e.uniforms[s] = t[s]);
    });
  },
  cesiumProps: Ut,
  cesiumReadonlyProps: i.readonlyProps,
  defaultProps: {
    enabled: !0
  }
}), ps = (i) => (
  // supports both functional components and class components
  // eslint-disable-next-line react/display-name
  di((e, t) => /* @__PURE__ */ ue(_t, { children: (o) => /* @__PURE__ */ ue(i, { ...e, ref: t, cesium: o }) }))
), jt = [
  "alignedAxis",
  "color",
  "disableDepthTestDistance",
  "distanceDisplayCondition",
  "eyeOffset",
  "height",
  "heightReference",
  "horizontalOrigin",
  "image",
  "pixelOffset",
  "pixelOffsetScaleByDistance",
  "position",
  "rotation",
  "scale",
  "scaleByDistance",
  "show",
  "sizeInMeters",
  "translucencyByDistance",
  "verticalOrigin",
  "width",
  "id"
], Ht = c({
  name: "Billboard",
  create(i, e) {
    var t;
    return (t = i.billboardCollection) == null ? void 0 : t.add(e);
  },
  destroy(i, e) {
    e.billboardCollection && !e.billboardCollection.isDestroyed() && e.billboardCollection.remove(i);
  },
  cesiumProps: jt,
  useCommonEvent: !0
}), ys = Ht, xt = [
  "blendOption",
  "debugShowBoundingVolume",
  "debugShowTextureAtlas",
  "modelMatrix",
  "show"
], zt = c({
  name: "BillboardCollection",
  create(i, e) {
    if (!i.primitiveCollection)
      return;
    const t = new xi({
      modelMatrix: e.modelMatrix,
      debugShowBoundingVolume: e.debugShowBoundingVolume,
      scene: i.scene,
      blendOption: e.blendOption
    });
    return i.primitiveCollection.add(t), t;
  },
  destroy(i, e) {
    e.primitiveCollection && !e.primitiveCollection.isDestroyed() && e.primitiveCollection.remove(i), i.isDestroyed() || i.destroy();
  },
  provide(i) {
    return {
      billboardCollection: i
    };
  },
  cesiumProps: xt
}), vs = zt, Nt = [
  "image",
  "show",
  "scale",
  "horizontalOrigin",
  "verticalOrigin",
  "eyeOffset",
  "pixelOffset",
  "rotation",
  "alignedAxis",
  "width",
  "height",
  "color",
  "scaleByDistance",
  "translucencyByDistance",
  "pixelOffsetScaleByDistance",
  "imageSubRegion",
  "sizeInMeters",
  "heightReference",
  "distanceDisplayCondition",
  "disableDepthTestDistance"
], Yt = {
  onDefinitionChange: "definitionChanged"
}, Kt = c({
  name: "BillboardGraphics",
  create(i, e) {
    if (!i.entity)
      return;
    const t = new zi(e);
    return i.entity.billboard = t, t;
  },
  destroy(i, e) {
    e.entity && (e.entity.billboard = void 0);
  },
  cesiumProps: Nt,
  cesiumEventProps: Yt
}), gs = Kt, qt = [
  "heightReference",
  "dimensions",
  "show",
  "fill",
  "material",
  "outline",
  "outlineColor",
  "outlineWidth",
  "shadows",
  "distanceDisplayCondition"
], Jt = {
  onDefinitionChange: "definitionChanged"
}, Zt = c({
  name: "BoxGraphics",
  create(i, e) {
    if (!i.entity)
      return;
    const t = new Ni(e);
    return i.entity.box = t, t;
  },
  destroy(i, e) {
    e.entity && (e.entity.box = void 0);
  },
  cesiumProps: qt,
  cesiumEventProps: Jt
}), Cs = Zt, Xt = [
  "position",
  "direction",
  "up",
  "right",
  "frustum",
  "defaultMoveAmount",
  "defaultLookAmount",
  "defaultRotateAmount",
  "defaultZoomAmount",
  "constrainedAxis",
  "maximumZoomFactor",
  "percentageChanged"
], Qt = {
  onChange: "changed",
  onMoveEnd: "moveEnd",
  onMoveStart: "moveStart"
}, en = c({
  name: "Camera",
  create: (i) => {
    var e;
    return (e = i.scene) == null ? void 0 : e.camera;
  },
  cesiumProps: Xt,
  cesiumEventProps: Qt,
  setCesiumPropsAfterCreate: !0
}), Ps = en, tn = be(
  "CameraFlyHome",
  (i, { duration: e }) => {
    i.flyHome(e);
  }
), Ss = tn, nn = be(
  "CameraFlyTo",
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  (i, { onComplete: e, onCancel: t, ...o }) => {
    i.flyTo({ ...o, complete: e, cancel: t });
  }
), Es = nn, on = be(
  "CameraLookAt",
  (i, { target: e, offset: t }) => {
    i.lookAt(e, t);
  }
), bs = on, rn = be(
  "CameraFlyToBoundingSphere",
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  (i, { boundingSphere: e, onComplete: t, onCancel: o, ...s }) => {
    i.flyToBoundingSphere(e, {
      ...s,
      complete: t,
      cancel: o
    });
  }
), ws = rn, sn = [
  "show",
  "modelMatrix",
  "shadows",
  "maximumScreenSpaceError",
  "maximumMemoryUsage",
  "cullRequestsWhileMoving",
  "cullRequestsWhileMovingMultiplier",
  "preloadWhenHidden",
  "preloadFlightDestinations",
  "preferLeaves",
  "progressiveResolutionHeightFraction",
  "foveatedScreenSpaceError",
  "foveatedConeSize",
  "foveatedMinimumScreenSpaceErrorRelaxation",
  "foveatedInterpolationCallback",
  "foveatedTimeDelay",
  "dynamicScreenSpaceError",
  "dynamicScreenSpaceErrorDensity",
  "dynamicScreenSpaceErrorFactor",
  "dynamicScreenSpaceErrorHeightFalloff",
  "skipLevelOfDetail",
  "baseScreenSpaceError",
  "skipScreenSpaceErrorFactor",
  "skipLevels",
  "immediatelyLoadDesiredLevelOfDetail",
  "loadSiblings",
  "clippingPlanes",
  "classificationType",
  "ellipsoid",
  "lightColor",
  "colorBlendAmount",
  "colorBlendMode",
  "debugFreezeFrame",
  "debugColorizeTiles",
  "debugWireframe",
  "debugShowBoundingVolume",
  "debugShowContentBoundingVolume",
  "debugShowViewerRequestVolume",
  "debugShowGeometricError",
  "debugShowRenderingStatistics",
  "debugShowMemoryUsage",
  "debugShowUrl",
  "style",
  "backFaceCulling",
  "vectorClassificationOnly",
  "vectorKeepDecodedPositions",
  "splitDirection",
  "customShader",
  "imageBasedLighting",
  "showCreditsOnScreen",
  "featureIdLabel",
  "instanceFeatureIdLabel",
  "imageBasedLighting",
  "outlineColor"
], an = [
  "url",
  "showOutline",
  "cullWithChildrenBounds",
  "debugHeatmapTilePropertyName",
  "enableDebugWireframe",
  "modelUpAxis",
  "modelForwardAxis",
  "projectTo2D",
  "enableShowOutline"
], cn = {
  onAllTilesLoad: "allTilesLoaded",
  onInitialTilesLoad: "initialTilesLoaded",
  onLoadProgress: "loadProgress",
  onTileFailed: "tileFailed",
  onTileLoad: "tileLoad",
  onTileUnload: "tileUnload",
  onTileVisible: "tileVisible"
}, ln = ["onReady"], un = c({
  name: "Cesium3DTileset",
  create(i, e) {
    if (!i.primitiveCollection)
      return;
    const t = new Yi(e);
    return e.colorBlendAmount && (t.colorBlendAmount = e.colorBlendAmount), e.colorBlendMode && (t.colorBlendMode = e.colorBlendMode), e.style && (t.style = e.style), e.onReady && t.readyPromise.then(e.onReady), i.primitiveCollection.add(t), t;
  },
  destroy(i, e) {
    e.primitiveCollection && !e.primitiveCollection.isDestroyed() && e.primitiveCollection.remove(i), i.isDestroyed() || i.destroy();
  },
  cesiumProps: sn,
  cesiumReadonlyProps: an,
  cesiumEventProps: cn,
  otherProps: ln,
  useCommonEvent: !0
}), Ds = un, dn = ["show", "uri", "maximumScreenSpaceError"], mn = {
  onDefinitionChange: "definitionChanged"
}, fn = c({
  name: "Cesium3DTilesetGraphics",
  create(i, e) {
    if (!i.entity)
      return;
    const t = new Ki(e);
    return i.entity.tileset = t, t;
  },
  destroy(i, e) {
    e.entity && (e.entity.tileset = void 0);
  },
  cesiumProps: dn,
  cesiumEventProps: mn
}), Rs = fn, hn = [
  "resolutionScale",
  "useDefaultRenderLoop",
  "targetFrameRate",
  "useBrowserRecommendedResolution"
], pn = [
  "clock",
  "imageryProvider",
  "terrainProvider",
  "skyBox",
  "skyAtmosphere",
  "sceneMode",
  "scene3DOnly",
  "orderIndependentTranslucency",
  "mapMode2D",
  "mapProjection",
  "globe",
  "showRenderLoopErrors",
  "contextOptions",
  "creditContainer",
  "creditViewport",
  "shadows",
  "terrainShadows",
  "requestRenderMode",
  "maximumRenderTimeChange",
  "msaaSamples",
  "blurActiveElementOnCanvasFocus"
], yn = ["className", "id", "style", "full", "containerProps"], vn = c({
  name: "CesiumWidget",
  create(i, e, t) {
    if (!t)
      return;
    const o = new qi(t, e);
    if (!o)
      return;
    typeof e.resolutionScale == "number" && (o.resolutionScale = e.resolutionScale);
    const s = new de(o.scene);
    return [o, s];
  },
  destroy(i, e, t, o) {
    o && !o.isDestroyed() && o.destroy(), i.isDestroyed() || i.destroy();
  },
  provide(i, e, t, o) {
    return {
      cesiumWidget: i,
      scene: i.scene,
      camera: i.scene.camera,
      imageryLayerCollection: i.scene.globe.imageryLayers,
      primitiveCollection: i.scene.primitives,
      globe: i.scene.globe,
      __$internal: {
        onUpdate: t == null ? void 0 : t.onUpdate
      },
      [te]: o
    };
  },
  containerProps: ({ id: i, className: e, style: t, full: o, containerProps: s }) => ({
    className: e,
    id: i,
    style: {
      ...o ? {
        position: "absolute",
        bottom: "0",
        left: "0",
        right: "0",
        top: "0"
      } : {},
      ...t
    },
    ...s
  }),
  cesiumProps: hn,
  cesiumReadonlyProps: pn,
  otherProps: yn,
  renderContainer: !0,
  useCommonEvent: !0,
  useRootEvent: !0
}), $s = vn, gn = [
  "classificationType",
  "debugShowBoundingVolume",
  "debugShowShadowVolume",
  "show"
], Cn = [
  "allowPicking",
  "asynchronous",
  "compressVertices",
  "geometryInstances",
  "interleave",
  "releaseGeometryInstances",
  "vertexCacheOptimize",
  "appearance"
], Pn = ["onReady"], Sn = c({
  name: "ClassificationPrimitive",
  create(i, e) {
    if (!i.primitiveCollection)
      return;
    const t = new Ji(e);
    return e.onReady && t.readyPromise.then(e.onReady), i.primitiveCollection.add(t), t;
  },
  destroy(i, e) {
    e.primitiveCollection && !e.primitiveCollection.isDestroyed() && e.primitiveCollection.remove(i), i.isDestroyed() || i.destroy();
  },
  cesiumProps: gn,
  cesiumReadonlyProps: Cn,
  otherProps: Pn,
  useCommonEvent: !0
}), Ts = Sn, En = {
  onStop: "onStop",
  onTick: "onTick"
}, bn = [
  "canAnimate",
  "clockRange",
  "clockStep",
  "currentTime",
  "multiplier",
  "shouldAnimate",
  "startTime",
  "stopTime"
], wn = c({
  name: "Clock",
  create: (i) => {
    var e;
    return (e = i.cesiumWidget) == null ? void 0 : e.clock;
  },
  cesiumProps: bn,
  cesiumEventProps: En,
  setCesiumPropsAfterCreate: !0
}), Ms = wn, Dn = [
  "noiseDetail",
  "noiseOffset",
  "show",
  "debugBillboards",
  "debugEllipsoids"
], Rn = c({
  name: "CloudCollection",
  create: (i) => {
    if (!i.primitiveCollection)
      return;
    const e = new Zi();
    return i.primitiveCollection.add(e), e;
  },
  destroy(i, e) {
    e.primitiveCollection && !e.primitiveCollection.isDestroyed() && e.primitiveCollection.remove(i), i.isDestroyed() || i.destroy();
  },
  provide: (i) => ({
    cloudCollection: i
  }),
  cesiumProps: Dn,
  setCesiumPropsAfterCreate: !0
}), ks = Rn, $n = [
  "positions",
  "width",
  "cornerType",
  "height",
  "heightReference",
  "extrudedHeight",
  "extrudedHeightReference",
  "show",
  "fill",
  "material",
  "outline",
  "outlineColor",
  "outlineWidth",
  "granularity",
  "shadows",
  "distanceDisplayCondition",
  "zIndex",
  "classificationType"
], Tn = {
  onDefinitionChange: "definitionChanged"
}, Mn = c({
  name: "CorridorGraphics",
  create(i, e) {
    if (!i.entity)
      return;
    const t = new Xi(e);
    return e.classificationType && (t.classificationType = e.classificationType), i.entity.corridor = t, t;
  },
  destroy(i, e) {
    e.entity && (e.entity.corridor = void 0);
  },
  cesiumProps: $n,
  cesiumEventProps: Tn
}), _s = Mn, kn = [
  "show",
  "position",
  "scale",
  "maximumSize",
  "slice",
  "brightness",
  "color"
], _n = c({
  name: "CumulusCloud",
  create: (i, e) => {
    var t;
    return (t = i.cloudCollection) == null ? void 0 : t.add(e);
  },
  destroy(i, e) {
    e.cloudCollection && !e.cloudCollection.isDestroyed() && e.cloudCollection.remove(i);
  },
  cesiumProps: kn
}), Os = _n, On = ["clustering", "name", "show", "clock", "isLoading"], Gn = {
  onChange: "changedEvent",
  onError: "errorEvent",
  onLoading: "loadingEvent"
}, Ln = c({
  name: "CustomDataSource",
  create(i, e) {
    if (!i.dataSourceCollection)
      return;
    const t = new Qi(e.name);
    return e.clustering && (t.clustering = e.clustering), typeof e.show == "boolean" && (t.show = e.show), typeof e.clock < "u" && (t.clock = e.clock), i.dataSourceCollection.add(t), t;
  },
  destroy(i, e) {
    e.dataSourceCollection && !e.dataSourceCollection.isDestroyed() && e.dataSourceCollection.remove(i);
  },
  provide(i) {
    return {
      entityCollection: i.entities,
      dataSource: i
    };
  },
  cesiumProps: On,
  cesiumEventProps: Gn,
  useCommonEvent: !0
}), Gs = Ln, Bn = [
  "heightReference",
  "length",
  "topRadius",
  "bottomRadius",
  "show",
  "fill",
  "material",
  "outline",
  "outlineColor",
  "outlineWidth",
  "numberOfVerticalLines",
  "slices",
  "distanceDisplayCondition",
  "shadows"
], An = {
  onDefinitionChange: "definitionChanged"
}, Fn = c({
  name: "CylinderGraphics",
  create(i, e) {
    if (!i.entity)
      return;
    const t = new et(e);
    return i.entity.cylinder = t, t;
  },
  destroy(i, e) {
    e.entity && (e.entity.cylinder = void 0);
  },
  cesiumProps: Bn,
  cesiumEventProps: An
}), Ls = Fn, In = ["clustering", "show"], Wn = ["name", "sourceUri", "credit"], Vn = {
  onChange: "changedEvent",
  onError: "errorEvent",
  onLoading: "loadingEvent"
}, Un = ["onLoad", "data"], ri = (i, { data: e, onLoad: t, ...o }) => {
  e && i.load(e, o).then((s) => {
    t && t(s);
  });
}, jn = c({
  name: "CzmlDataSource",
  create(i, e) {
    if (!i.dataSourceCollection)
      return;
    const t = new it(e.name);
    return e.clustering && (t.clustering = e.clustering), typeof e.show == "boolean" && (t.show = e.show), i.dataSourceCollection.add(t), e.data && ri(t, e), t;
  },
  update(i, e, t) {
    e.data ? t.show !== e.show && (i.show = typeof e.show == "boolean" ? e.show : !0) : i.show = !1, e.data && (t.data !== e.data || t.sourceUri !== e.sourceUri || t.credit !== e.credit) && ri(i, e);
  },
  destroy(i, e) {
    e.dataSourceCollection && !e.dataSourceCollection.isDestroyed() && e.dataSourceCollection.remove(i);
  },
  provide(i) {
    return {
      dataSource: i
    };
  },
  cesiumProps: In,
  cesiumReadonlyProps: Wn,
  cesiumEventProps: Vn,
  otherProps: Un,
  useCommonEvent: !0
}), Bs = jn, Hn = [
  "semiMajorAxis",
  "semiMinorAxis",
  "height",
  "heightReference",
  "extrudedHeight",
  "show",
  "fill",
  "material",
  "outline",
  "outlineColor",
  "outlineWidth",
  "numberOfVerticalLines",
  "rotation",
  "stRotation",
  "granularity",
  "shadows",
  "distanceDisplayCondition",
  "zIndex",
  "classificationType",
  "extrudedHeightReference"
], xn = {
  onDefinitionChange: "definitionChanged"
}, zn = c({
  name: "EllipseGraphics",
  create(i, e) {
    if (!i.entity)
      return;
    const t = new tt(e);
    return i.entity.ellipse = t, t;
  },
  destroy(i, e) {
    e.entity && (e.entity.ellipse = void 0);
  },
  cesiumProps: Hn,
  cesiumEventProps: xn
}), As = zn, Nn = [
  "heightReference",
  "radii",
  "show",
  "fill",
  "innerRadii",
  "material",
  "maximumClock",
  "maximumCone",
  "minimumClock",
  "minimumCone",
  "outline",
  "outlineColor",
  "outlineWidth",
  "subdivisions",
  "stackPartitions",
  "slicePartitions",
  "shadows",
  "distanceDisplayCondition"
], Yn = {
  onDefinitionChange: "definitionChanged"
}, Kn = c({
  name: "EllipsoidGraphics",
  create(i, e) {
    if (!i.entity)
      return;
    const t = new nt(e);
    return i.entity.ellipsoid = t, t;
  },
  destroy(i, e) {
    e.entity && (e.entity.ellipsoid = void 0);
  },
  cesiumProps: Nn,
  cesiumEventProps: Yn
}), Fs = Kn, qn = [
  "availability",
  "billboard",
  "box",
  "corridor",
  "cylinder",
  "description",
  "ellipse",
  "ellipsoid",
  "entityCollection",
  "label",
  "model",
  "name",
  "orientation",
  "path",
  "plane",
  "parent",
  "point",
  "polygon",
  "polyline",
  "polylineVolume",
  "position",
  "properties",
  "rectangle",
  "show",
  "tileset",
  "viewFrom",
  "wall"
], Jn = ["id"], Zn = {
  onDefinitionChange: "definitionChanged"
}, Xn = ["selected", "tracked"], Qn = c({
  name: "Entity",
  create(i, e) {
    if (!i.entityCollection)
      return;
    const t = new ot(e);
    return i.viewer && e.selected && (i.viewer.selectedEntity = t), i.viewer && e.tracked && (i.viewer.trackedEntity = t), i.entityCollection.add(t), t;
  },
  destroy(i, e) {
    e.entityCollection && e.entityCollection.remove(i);
  },
  update(i, e, t, o) {
    o.viewer && (e.selected !== t.selected && (e.selected ? o.viewer.selectedEntity = i : o.viewer.selectedEntity === i && (o.viewer.selectedEntity = void 0)), e.tracked !== t.tracked && (e.tracked ? o.viewer.trackedEntity = i : o.viewer.trackedEntity === i && (o.viewer.trackedEntity = void 0)));
  },
  provide(i) {
    return {
      entity: i
    };
  },
  cesiumProps: qn,
  cesiumReadonlyProps: Jn,
  cesiumEventProps: Zn,
  otherProps: Xn,
  useCommonEvent: !0
}), Is = Qn, eo = ({
  children: i,
  container: e,
  resizeInfoBox: t = !0
}) => {
  const { viewer: o, entity: s } = Ee(), [d, g] = ui(!1), C = Hi(
    () => {
      var u;
      return e ?? ((u = o == null ? void 0 : o.infoBox.frame.contentDocument) == null ? void 0 : u.createElement("div"));
    },
    [e, o == null ? void 0 : o.infoBox.frame.contentDocument]
  );
  return ne(() => {
    if (!o || !s)
      return;
    const u = (S) => {
      g(!!S && S.id === s.id);
    };
    return o.selectedEntityChanged.addEventListener(u), () => {
      o.selectedEntityChanged.removeEventListener(u);
    };
  }, [s, o]), ne(() => {
    var T, k;
    if (e || !C || !o)
      return;
    const u = (T = o.infoBox) == null ? void 0 : T.frame, S = (k = u == null ? void 0 : u.contentDocument) == null ? void 0 : k.querySelector(".cesium-infoBox-description");
    if (!u || !S)
      return;
    let v;
    if (d) {
      if (t) {
        const h = S.getBoundingClientRect().height;
        u.style.height = h + "px", v = window.setTimeout(() => {
          var _;
          S.appendChild(C), (_ = o.infoBox.container.querySelector(".cesium-infoBox.cesium-infoBox-bodyless")) == null || _.classList.remove("cesium-infoBox-bodyless"), u.style.height = S.getBoundingClientRect().height + "px";
        }, 10);
      }
    } else
      C.parentElement === S && S.removeChild(C);
    return v ? () => clearTimeout(v) : void 0;
  }, [C, e, t, d, o]), C ? kt(!e || d ? i : null, C) : null;
}, Ws = eo, io = [
  "density",
  "enabled",
  "minimumBrightness",
  "screenSpaceErrorFactor",
  "renderable"
], to = c({
  name: "Fog",
  create(i) {
    if (!i.scene)
      return;
    const e = new Qe();
    return i.scene.fog = e, e;
  },
  destroy(i, e) {
    e.scene && !e.scene.isDestroyed() && (e.scene.fog = new Qe());
  },
  cesiumProps: io,
  setCesiumPropsAfterCreate: !0
}), Vs = to, no = ["clustering", "name", "show"], oo = [
  "clampToGround",
  "sourceUri",
  "credit",
  "markerSize",
  "markerSymbol",
  "markerColor",
  "stroke",
  "strokeWidth",
  "fill",
  "describe"
], ro = {
  onChange: "changedEvent",
  onError: "errorEvent",
  onLoading: "loadingEvent"
}, so = ["onLoad", "data"], si = (i, { data: e, onLoad: t, ...o }) => {
  e && i.load(e, o).then((s) => {
    t && t(s);
  });
}, ao = c({
  name: "GeoJsonDataSource",
  create(i, e) {
    if (!i.dataSourceCollection)
      return;
    const t = new rt(e.name);
    return e.clustering && (t.clustering = e.clustering), typeof e.show == "boolean" && (t.show = e.show), i.dataSourceCollection.add(t), e.data && si(t, e), t;
  },
  update(i, e, t) {
    e.data ? t.show !== e.show && (i.show = typeof e.show == "boolean" ? e.show : !0) : i.show = !1, e.data && (t.data !== e.data || t.clampToGround !== e.clampToGround || t.sourceUri !== e.sourceUri || t.credit !== e.credit || t.markerSize !== e.markerSize || t.markerSymbol !== e.markerSymbol || t.markerColor !== e.markerColor || t.stroke !== e.stroke || t.strokeWidth !== e.strokeWidth || t.fill !== e.fill) && si(i, e);
  },
  destroy(i, e) {
    e.dataSourceCollection && !e.dataSourceCollection.isDestroyed() && e.dataSourceCollection.remove(i);
  },
  provide(i) {
    return {
      dataSource: i
    };
  },
  cesiumProps: no,
  cesiumReadonlyProps: oo,
  cesiumEventProps: ro,
  otherProps: so,
  useCommonEvent: !0
}), Us = ao, co = {
  onImageryLayersUpdate: "imageryLayersUpdatedEvent",
  onTerrainProviderChange: "terrainProviderChanged",
  onTileLoadProgress: "tileLoadProgressEvent"
}, lo = [
  "atmosphereBrightnessShift",
  "atmosphereHueShift",
  "atmosphereSaturationShift",
  "backFaceCulling",
  "baseColor",
  "clippingPlanes",
  "depthTestAgainstTerrain",
  "enableLighting",
  "lightingFadeInDistance",
  "lightingFadeOutDistance",
  "material",
  "maximumScreenSpaceError",
  "nightFadeInDistance",
  "nightFadeOutDistance",
  "oceanNormalMapUrl",
  "shadows",
  "show",
  "showGroundAtmosphere",
  "showWaterEffect",
  "terrainProvider",
  "tileCacheSize",
  "loadingDescendantLimit",
  "preloadAncestors",
  "preloadSiblings",
  "fillHighlightColor",
  "dynamicAtmosphereLighting",
  "dynamicAtmosphereLightingFromSun",
  "showSkirts",
  "cartographicLimitRectangle",
  "translucency",
  "undergroundColor",
  "undergroundColorAlphaByDistance",
  "terrainExaggeration",
  "terrainExaggerationRelativeHeight",
  "lambertDiffuseMultiplier",
  "atmosphereLightIntensity",
  "atmosphereRayleighCoefficient",
  "atmosphereMieCoefficient",
  "atmosphereRayleighScaleHeight",
  "atmosphereMieScaleHeight",
  "atmosphereMieAnisotropy",
  "vertexShadowDarkness"
], uo = c({
  name: "Globe",
  create: (i) => {
    var e;
    return (e = i.scene) == null ? void 0 : e.globe;
  },
  cesiumProps: lo,
  cesiumEventProps: co,
  setCesiumPropsAfterCreate: !0
}), js = uo, mo = [
  "appearance",
  "classificationType",
  "debugShowBoundingVolume",
  "debugShowShadowVolume",
  "show"
], fo = [
  "allowPicking",
  "asynchronous",
  "geometryInstances",
  "interleave",
  "releaseGeometryInstances"
], ho = ["onReady"], po = c({
  name: "GroundPolylinePrimitive",
  create(i, e) {
    if (!i.primitiveCollection)
      return;
    const t = new st(e);
    return e.onReady && t.readyPromise.then(e.onReady), i.primitiveCollection.add(t), t;
  },
  destroy(i, e) {
    e.primitiveCollection && !e.primitiveCollection.isDestroyed() && e.primitiveCollection.remove(i), i.isDestroyed() || i.destroy();
  },
  cesiumProps: mo,
  cesiumReadonlyProps: fo,
  otherProps: ho,
  useCommonEvent: !0
}), Hs = po, yo = [
  "appearance",
  "classificationType",
  "debugShowBoundingVolume",
  "debugShowShadowVolume",
  "show"
], vo = [
  "allowPicking",
  "asynchronous",
  "compressVertices",
  "geometryInstances",
  "interleave",
  "releaseGeometryInstances",
  "vertexCacheOptimize"
], go = ["onReady"], Co = c({
  name: "GroundPrimitive",
  create(i, e) {
    if (!i.primitiveCollection)
      return;
    const t = new at(e);
    return e.onReady && t.readyPromise.then(e.onReady), i.primitiveCollection.add(t), t;
  },
  destroy(i, e) {
    e.primitiveCollection && !e.primitiveCollection.isDestroyed() && e.primitiveCollection.remove(i), i.isDestroyed() || i.destroy();
  },
  cesiumProps: yo,
  cesiumReadonlyProps: vo,
  otherProps: go,
  useCommonEvent: !0
}), xs = Co, Po = ["show", "destroyPrimitives"], So = c({
  name: "GroundPrimitiveCollection",
  create: (i) => {
    var e;
    return (e = i.scene) == null ? void 0 : e.groundPrimitives;
  },
  provide: (i) => ({
    primitiveCollection: i
  }),
  cesiumProps: Po,
  setCesiumPropsAfterCreate: !0
}), zs = So, Eo = [
  "alpha",
  "brightness",
  "contrast",
  "hue",
  "saturation",
  "gamma",
  "splitDirection",
  "minificationFilter",
  "magnificationFilter",
  "cutoutRectangle",
  "show",
  "nightAlpha",
  "dayAlpha",
  "colorToAlpha",
  "colorToAlphaThreshold",
  "index"
], bo = [
  "imageryProvider",
  "rectangle",
  "maximumAnisotropy",
  "minimumTerrainLevel",
  "maximumTerrainLevel"
], wo = c({
  name: "ImageryLayer",
  create(i, e) {
    if (!i.imageryLayerCollection)
      return;
    const t = new ct(e.imageryProvider, e);
    return i.imageryLayerCollection.add(t, e.index), t;
  },
  destroy(i, e) {
    e.imageryLayerCollection && e.imageryLayerCollection.remove(i);
  },
  cesiumProps: Eo,
  cesiumReadonlyProps: bo
}), Ns = wo, Do = {
  onLayerAdd: "layerAdded",
  onLayerMove: "layerMoved",
  onLayerRemove: "layerRemoved",
  onLayerShowOrHide: "layerShownOrHidden"
}, Ro = c({
  name: "ImageryLayerCollection",
  create: (i) => {
    var e;
    return (e = i.globe) == null ? void 0 : e.imageryLayers;
  },
  cesiumEventProps: Do
}), Ys = Ro, $o = ["clustering", "name", "show"], To = [
  "canvas",
  "camera",
  "ellipsoid",
  "clampToGround",
  "sourceUri",
  "credit",
  "screenOverlayContainer"
], Mo = {
  onChange: "changedEvent",
  onError: "errorEvent",
  onLoading: "loadingEvent",
  onRefresh: "refreshEvent",
  onUnsupportedNode: "unsupportedNodeEvent"
}, ko = ["onLoad", "data"], ai = (i, { data: e, onLoad: t, ...o }) => {
  e && i.load(e, o).then((s) => {
    t && t(s);
  });
}, _o = c({
  name: "KmlDataSource",
  create(i, e) {
    if (!i.scene || !i.dataSourceCollection || !i.scene)
      return;
    const t = new lt({
      camera: e.camera || i.scene.camera,
      canvas: e.canvas || i.scene.canvas,
      ellipsoid: e.ellipsoid,
      credit: e.credit
    });
    return e.clustering && (t.clustering = e.clustering), typeof e.show == "boolean" && (t.show = e.show), typeof e.name < "u" && (t.name = e.name), i.dataSourceCollection.add(t), e.data && ai(t, e), t;
  },
  update(i, e, t) {
    e.data ? t.show !== e.show && (i.show = typeof e.show == "boolean" ? e.show : !0) : i.show = !1, e.data && (t.data !== e.data || t.clampToGround !== e.clampToGround || t.ellipsoid !== e.ellipsoid || t.sourceUri !== e.sourceUri || t.credit !== e.credit) && ai(i, e);
  },
  destroy(i, e) {
    e.dataSourceCollection && !e.dataSourceCollection.isDestroyed() && e.dataSourceCollection.remove(i);
  },
  provide(i) {
    return {
      dataSource: i
    };
  },
  cesiumProps: $o,
  cesiumReadonlyProps: To,
  cesiumEventProps: Mo,
  otherProps: ko,
  useCommonEvent: !0
}), Ks = _o, Oo = [
  "backgroundColor",
  "backgroundPadding",
  "disableDepthTestDistance",
  "distanceDisplayCondition",
  "eyeOffset",
  "fillColor",
  "font",
  "heightReference",
  "horizontalOrigin",
  "id",
  "outlineColor",
  "outlineWidth",
  "pixelOffset",
  "pixelOffsetScaleByDistance",
  "position",
  "scale",
  "scaleByDistance",
  "show",
  "showBackground",
  "style",
  "text",
  "translucencyByDistance",
  "verticalOrigin"
], Go = c({
  name: "Label",
  create: (i, e) => {
    var t;
    return (t = i.labelCollection) == null ? void 0 : t.add(e);
  },
  destroy(i, e) {
    e.labelCollection && !e.labelCollection.isDestroyed() && e.labelCollection.remove(i);
  },
  cesiumProps: Oo,
  useCommonEvent: !0
}), qs = Go, Lo = ["blendOption", "debugShowBoundingVolume", "modelMatrix", "show"], Bo = c({
  name: "LabelCollection",
  create(i, e) {
    if (!i.scene || !i.primitiveCollection)
      return;
    const t = new ut({
      scene: i.scene,
      modelMatrix: e.modelMatrix,
      blendOption: e.blendOption,
      debugShowBoundingVolume: e.debugShowBoundingVolume
    });
    return i.primitiveCollection.add(t), t;
  },
  destroy(i, e) {
    e.primitiveCollection && !e.primitiveCollection.isDestroyed() && e.primitiveCollection.remove(i), i.isDestroyed() || i.destroy();
  },
  provide(i) {
    return {
      labelCollection: i
    };
  },
  cesiumProps: Lo
}), Js = Bo, Ao = [
  "text",
  "font",
  "style",
  "fillColor",
  "outlineColor",
  "outlineWidth",
  "show",
  "showBackground",
  "backgroundColor",
  "backgroundPadding",
  "scale",
  "horizontalOrigin",
  "verticalOrigin",
  "eyeOffset",
  "pixelOffset",
  "translucencyByDistance",
  "pixelOffsetScaleByDistance",
  "scaleByDistance",
  "heightReference",
  "distanceDisplayCondition",
  "disableDepthTestDistance"
], Fo = {
  onDefinitionChange: "definitionChanged"
}, Io = c({
  name: "LabelGraphics",
  create(i, e) {
    if (!i.entity)
      return;
    const t = new dt(e);
    return i.entity.label = t, t;
  },
  destroy(i, e) {
    e.entity && (e.entity.label = void 0);
  },
  cesiumProps: Ao,
  cesiumEventProps: Fo
}), Zs = Io, Wo = [
  "backFaceCulling",
  "clampAnimations",
  "clippingPlanes",
  "color",
  "colorBlendAmount",
  "colorBlendMode",
  "customShader",
  "debugShowBoundingVolume",
  "debugWireframe",
  "distanceDisplayCondition",
  "featureIdLabel",
  "heightReference",
  "id",
  "imageBasedLighting",
  "instanceFeatureIdLabel",
  "lightColor",
  "maximumScale",
  "minimumPixelSize",
  "modelMatrix",
  "outlineColor",
  "scale",
  "shadows",
  "show",
  "showCreditsOnScreen",
  "showOutline",
  "silhouetteColor",
  "silhouetteSize",
  "splitDirection",
  "style"
], Vo = [
  "allowPicking",
  "asynchronous",
  "basePath",
  "credit",
  "enableDebugWireframe",
  "gltf",
  "heightReference",
  "incrementallyLoadTextures",
  "scene",
  "url",
  "releaseGltfJson",
  "cull",
  "opaquePass",
  "upAxis",
  "forwardAxis",
  "content",
  "scene",
  "enableShowOutline",
  "projectTo2D",
  "classificationType"
], Uo = ["onReady"], jo = c({
  name: "Model",
  create(i, { scene: e, url: t, colorBlendMode: o, ...s }) {
    if (!i.scene || !i.primitiveCollection || !t)
      return;
    const d = mt.fromGltf({
      ...s,
      url: t,
      colorBlendMode: o,
      scene: e || i.scene
    });
    return s.onReady && d.readyPromise.then(s.onReady), i.primitiveCollection.add(d), d;
  },
  destroy(i, e) {
    e.primitiveCollection && !e.primitiveCollection.isDestroyed() && e.primitiveCollection.remove(i), i.isDestroyed() || i.destroy();
  },
  cesiumProps: Wo,
  cesiumReadonlyProps: Vo,
  otherProps: Uo,
  useCommonEvent: !0
}), Xs = jo, Ho = [
  "uri",
  "show",
  "scale",
  "minimumPixelSize",
  "maximumScale",
  "incrementallyLoadTextures",
  "runAnimations",
  "clampAnimations",
  "nodeTransformations",
  "shadows",
  "heightReference",
  "distanceDisplayCondition",
  "silhouetteColor",
  "silhouetteSize",
  "color",
  "colorBlendMode",
  "colorBlendAmount",
  "clippingPlanes",
  "imageBasedLightingFactor",
  "lightColor",
  "articulations",
  "customShader"
], xo = {
  onDefinitionChange: "definitionChanged"
}, zo = c({
  name: "ModelGraphics",
  create(i, e) {
    if (!i.entity)
      return;
    const t = new ft(e);
    return i.entity.model = t, t;
  },
  destroy(i, e) {
    e.entity && (e.entity.model = void 0);
  },
  cesiumProps: Ho,
  cesiumEventProps: xo
}), Qs = zo, No = ["onlySunLighting", "show", "textureUrl"], Yo = ["ellipsoid"], Ko = c({
  name: "Moon",
  create(i, e) {
    if (!i.scene)
      return;
    const t = new ei(e);
    return i.scene.moon = t, t;
  },
  destroy(i, e) {
    e.scene && !e.scene.isDestroyed() && (e.scene.moon = new ei());
  },
  cesiumProps: No,
  cesiumReadonlyProps: Yo
}), ea = Ko, qo = [
  "show",
  "emitter",
  "modelMatrix",
  "emitterModelMatrix",
  "emissionRate",
  "bursts",
  "loop",
  "startScale",
  "endScale",
  "startColor",
  "endColor",
  "image",
  "imageSize",
  "minimumImageSize",
  "maximumImageSize",
  "speed",
  "minimumSpeed",
  "maximumSpeed",
  "lifetime",
  "particleLife",
  "minimumParticleLife",
  "maximumParticleLife",
  "mass",
  "minimumMass",
  "maximumMass",
  "sizeInMeters"
], Jo = {
  onComplete: "complete",
  onUpdate: "updateCallback"
}, Zo = c({
  name: "ParticleSystem",
  create(i, e) {
    if (!i.primitiveCollection)
      return;
    const t = new ht({ ...e, updateCallback: e.onUpdate });
    return i.primitiveCollection.add(t), t;
  },
  update(i, e, t) {
    e.onUpdate !== t.onUpdate && (i.updateCallback = e.onUpdate);
  },
  destroy(i, e) {
    e.primitiveCollection && !e.primitiveCollection.isDestroyed() && e.primitiveCollection.remove(i);
  },
  cesiumProps: qo,
  cesiumEventProps: Jo
}), ia = Zo, Xo = [
  "leadTime",
  "trailTime",
  "show",
  "width",
  "material",
  "resolution",
  "distanceDisplayCondition"
], Qo = {
  onDefinitionChange: "definitionChanged"
}, er = c({
  name: "PathGraphics",
  create(i, e) {
    if (!i.entity)
      return;
    const t = new pt(e);
    return i.entity.path = t, t;
  },
  destroy(i, e) {
    e.entity && (e.entity.path = void 0);
  },
  cesiumProps: Xo,
  cesiumEventProps: Qo
}), ta = er, ir = [
  "plane",
  "dimensions",
  "show",
  "fill",
  "material",
  "outline",
  "outlineColor",
  "outlineWidth",
  "shadows",
  "distanceDisplayCondition"
], tr = {
  onDefinitionChange: "definitionChanged"
}, nr = c({
  name: "PlaneGraphics",
  create(i, e) {
    if (!i.entity)
      return;
    const t = new yt(e);
    return i.entity.plane = t, t;
  },
  destroy(i, e) {
    e.entity && (e.entity.plane = void 0);
  },
  cesiumProps: ir,
  cesiumEventProps: tr
}), na = nr, or = [
  "color",
  "pixelSize",
  "outlineColor",
  "outlineWidth",
  "show",
  "scaleByDistance",
  "translucencyByDistance",
  "heightReference",
  "distanceDisplayCondition",
  "disableDepthTestDistance"
], rr = {
  onDefinitionChange: "definitionChanged"
}, sr = c({
  name: "PointGraphics",
  create(i, e) {
    if (!i.entity)
      return;
    const t = new vt(e);
    return i.entity.point = t, t;
  },
  destroy(i, e) {
    e.entity && (e.entity.point = void 0);
  },
  cesiumProps: or,
  cesiumEventProps: rr
}), oa = sr, ar = [
  "color",
  "disableDepthTestDistance",
  "distanceDisplayCondition",
  "id",
  "outlineColor",
  "outlineWidth",
  "pixelSize",
  "position",
  "scaleByDistance",
  "show",
  "translucencyByDistance"
], cr = c({
  name: "PointPrimitive",
  create: (i, e) => {
    var t;
    return (t = i.pointPrimitiveCollection) == null ? void 0 : t.add(e);
  },
  destroy(i, e) {
    e.pointPrimitiveCollection && !e.pointPrimitiveCollection.isDestroyed() && e.pointPrimitiveCollection.remove(i);
  },
  cesiumProps: ar,
  useCommonEvent: !0
}), ra = cr, lr = ["blendOption", "debugShowBoundingVolume", "modelMatrix", "show"], ur = c({
  name: "PointPrimitveCollection",
  create(i, e) {
    if (!i.primitiveCollection)
      return;
    const t = new gt(e);
    return i.primitiveCollection.add(t), t;
  },
  destroy(i, e) {
    e.primitiveCollection && !e.primitiveCollection.isDestroyed() && e.primitiveCollection.remove(i), i.isDestroyed() || i.destroy();
  },
  provide(i) {
    return {
      pointPrimitiveCollection: i
    };
  },
  cesiumProps: lr
}), sa = ur, dr = [
  "arcType",
  "hierarchy",
  "height",
  "heightReference",
  "extrudedHeight",
  "extrudedHeightReference",
  "show",
  "fill",
  "material",
  "outline",
  "outlineColor",
  "outlineWidth",
  "stRotation",
  "granularity",
  "perPositionHeight",
  "closeTop",
  "closeBottom",
  "shadows",
  "distanceDisplayCondition",
  "zIndex",
  "classificationType",
  "textureCoordinates"
], mr = {
  onDefinitionChange: "definitionChanged"
}, fr = c({
  name: "PolygonGraphics",
  create(i, e) {
    if (!i.entity)
      return;
    const t = new Ct(e);
    return i.entity.polygon = t, t;
  },
  destroy(i, e) {
    e.entity && (e.entity.polygon = void 0);
  },
  cesiumProps: dr,
  cesiumEventProps: mr
}), aa = fr, hr = [
  "distanceDisplayCondition",
  "id",
  "loop",
  "material",
  "positions",
  "show",
  "width"
], pr = c({
  name: "Polyline",
  create: (i, e) => {
    var t;
    return (t = i.polylineCollection) == null ? void 0 : t.add(e);
  },
  destroy(i, e) {
    e.polylineCollection && !e.polylineCollection.isDestroyed() && e.polylineCollection.remove(i);
  },
  cesiumProps: hr,
  useCommonEvent: !0
}), ca = pr, yr = ["debugShowBoundingVolume", "length", "modelMatrix", "show"], vr = c(
  {
    name: "PolylineCollection",
    create(i, e) {
      if (!i.primitiveCollection)
        return;
      const t = new Pt({
        modelMatrix: e.modelMatrix,
        debugShowBoundingVolume: e.debugShowBoundingVolume,
        length: e.length,
        scene: i.scene
      });
      return i.primitiveCollection.add(t), t;
    },
    destroy(i, e) {
      e.primitiveCollection && !e.primitiveCollection.isDestroyed() && e.primitiveCollection.remove(i), i.isDestroyed() || i.destroy();
    },
    provide(i) {
      return {
        polylineCollection: i
      };
    },
    cesiumProps: yr
  }
), la = vr, gr = [
  "arcType",
  "classificationType",
  "positions",
  "clampToGround",
  "width",
  "show",
  "material",
  "depthFailMaterial",
  "granularity",
  "shadows",
  "distanceDisplayCondition",
  "zIndex"
], Cr = {
  onDefinitionChange: "definitionChanged"
}, Pr = c({
  name: "PolylineGraphics",
  create(i, e) {
    if (!i.entity)
      return;
    const t = new St(e);
    return i.entity.polyline = t, t;
  },
  destroy(i, e) {
    e.entity && (e.entity.polyline = void 0);
  },
  cesiumProps: gr,
  cesiumEventProps: Cr
}), ua = Pr, Sr = [
  "positions",
  "shape",
  "cornerType",
  "show",
  "fill",
  "material",
  "outline",
  "outlineColor",
  "outlineWidth",
  "granularity",
  "shadows",
  "distanceDisplayCondition"
], Er = {
  onDefinitionChange: "definitionChanged"
}, br = c({
  name: "PolylineVolumeGraphics",
  create(i, e) {
    if (!i.entity)
      return;
    const t = new Et(e);
    return i.entity.polylineVolume = t, t;
  },
  destroy(i, e) {
    e.entity && (e.entity.polylineVolume = void 0);
  },
  cesiumProps: Sr,
  cesiumEventProps: Er
}), da = br, wr = ["enabled", "selected"], Dr = [
  "clearColor",
  "forcePowerOfTwo",
  "fragmentShader",
  "name",
  "pixelDatatype",
  "pixelFormat",
  "sampleMode",
  "scissorRectangle",
  "textureScale",
  "uniforms"
], ma = c({
  name: "PostProcessStage",
  create(i, e) {
    if (!i.scene)
      return;
    const t = new bt(e);
    return typeof e.enabled == "boolean" && (t.enabled = e.enabled), e.selected && (t.selected = e.selected), i.scene.postProcessStages.add(t), t;
  },
  destroy(i, e) {
    e.scene && !e.scene.isDestroyed() && e.scene.postProcessStages.remove(i), i.isDestroyed() || i.destroy();
  },
  cesiumProps: wr,
  cesiumReadonlyProps: Dr
}), fa = F({
  name: "BlackAndWhiteStage",
  props: ["gradations"],
  create: () => N.createBlackAndWhiteStage()
}), ha = F({
  name: "BrightnessStage",
  props: ["brightness"],
  create: () => N.createBrightnessStage()
}), pa = F({
  name: "LensFlareStage",
  props: [
    "dirtTexture",
    "starTexture",
    "intensity",
    "distortion",
    "ghostDispersal",
    "haloWidth",
    "earthRadius"
  ],
  create: () => N.createLensFlareStage()
}), ya = F({
  name: "Fxaa",
  create: (i, e) => e.fxaa,
  props: []
}), va = F({
  name: "NightVisionStage",
  props: [],
  create: () => N.createNightVisionStage()
}), Rr = ["enabled", "selected"], $r = ["inputPreviousStageTexture", "name", "stages", "uniforms"], ga = c({
  name: "PostProcessStageComposite",
  create(i, e) {
    if (!i.scene)
      return;
    const t = new wt(e);
    return typeof e.enabled == "boolean" && (t.enabled = e.enabled), e.selected && (t.selected = e.selected), i.scene.postProcessStages.add(t), t;
  },
  destroy(i, e) {
    e.scene && !e.scene.isDestroyed() && e.scene.postProcessStages.remove(i), i.isDestroyed() || i.destroy();
  },
  cesiumProps: Rr,
  cesiumReadonlyProps: $r
}), Ca = F({
  name: "AmbientOcclusion",
  create: (i, e) => e.ambientOcclusion,
  props: [
    "ambientOcclusionOnly",
    "bias",
    "delta",
    "frustumLength",
    "intensity",
    "lengthCap",
    "sigma",
    "stepSize"
  ],
  noMount: !0
}), Pa = F({
  name: "Bloom",
  create: (i, e) => e.bloom,
  props: ["brightness", "contrast", "delta", "glowOnly", "sigma", "stepSize"],
  noMount: !0
}), Sa = F({
  name: "BlurStage",
  props: ["delta", "sigma", "stepSize"],
  create: () => N.createBlurStage()
}), Ea = F({
  name: "DepthOfFieldStage",
  props: ["delta", "focalDistance", "sigma", "stepSize"],
  create: () => N.createDepthOfFieldStage()
}), ba = F({
  name: "EdgeDetectionStage",
  props: ["color", "length"],
  create: () => N.createEdgeDetectionStage()
}), wa = F({
  name: "SilhouetteStage",
  props: ["color", "length"],
  create: () => N.createSilhouetteStage()
}), Tr = [
  "appearance",
  "cull",
  "debugShowBoundingVolume",
  "depthFailAppearance",
  "modelMatrix",
  "shadows",
  "show"
], Mr = [
  "allowPicking",
  "asynchronous",
  "compressVertices",
  "geometryInstances",
  "interleave",
  "releaseGeometryInstances",
  "vertexCacheOptimize"
], kr = ["onReady"], _r = c({
  name: "Primitive",
  create(i, e) {
    if (!i.primitiveCollection)
      return;
    const t = new Dt(e);
    return e.onReady && t.readyPromise.then(e.onReady), i.primitiveCollection.add(t), t;
  },
  destroy(i, e) {
    e.primitiveCollection && !e.primitiveCollection.isDestroyed() && e.primitiveCollection.remove(i), i.isDestroyed() || i.destroy();
  },
  cesiumProps: Tr,
  cesiumReadonlyProps: Mr,
  otherProps: kr,
  useCommonEvent: !0
}), Da = _r, Or = [
  "classificationType",
  "coordinates",
  "height",
  "heightReference",
  "extrudedHeight",
  "extrudedHeightReference",
  "show",
  "fill",
  "material",
  "outline",
  "outlineColor",
  "outlineWidth",
  "rotation",
  "stRotation",
  "granularity",
  "shadows",
  "distanceDisplayCondition",
  "zIndex"
], Gr = {
  onDefinitionChange: "definitionChanged"
}, Lr = c({
  name: "RectangleGraphics",
  create(i, e) {
    if (!i.entity)
      return;
    const t = new Rt(e);
    return i.entity.rectangle = t, t;
  },
  destroy(i, e) {
    e.entity && (e.entity.rectangle = void 0);
  },
  cesiumProps: Or,
  cesiumEventProps: Gr
}), Ra = Lr, Br = [
  "backgroundColor",
  "completeMorphOnUserInput",
  "debugCommandFilter",
  "debugShowCommands",
  "debugShowDepthFrustum",
  "debugShowFramesPerSecond",
  "debugShowFrustumPlanes",
  "debugShowFrustums",
  "eyeSeparation",
  "farToNearRatio",
  "focalLength",
  "fog",
  "gamma",
  "globe",
  "highDynamicRange",
  "invertClassification",
  "invertClassificationColor",
  "light",
  "logarithmicDepthBuffer",
  "logarithmicDepthFarToNearRatio",
  "maximumRenderTimeChange",
  "minimumDisableDepthTestDistance",
  // "mode", // enable morph with animation
  "moon",
  "morphTime",
  "nearToFarDistance2D",
  "pickTranslucentDepth",
  "requestRenderMode",
  "rethrowRenderErrors",
  "shadowMap",
  "skyAtmosphere",
  "skyBox",
  "specularEnvironmentMaps",
  "sphericalHarmonicCoefficients",
  "sun",
  "sunBloom",
  "terrainProvider",
  "useDepthPicking",
  "useWebVR",
  "postProcessStages",
  "msaaSamples",
  "splitPosition",
  "debugCommandFilter"
], Ar = {
  onMorphComplete: "morphComplete",
  onMorphStart: "morphStart",
  onPostRender: "postRender",
  onPreRender: "preRender",
  onPreUpdate: "preUpdate",
  onPostUpdate: "postUpdate",
  onRenderError: "renderError",
  onTerrainProviderChange: "terrainProviderChanged"
}, Fr = ["mode", "morphDuration"], ci = (i, e, t) => {
  switch (e) {
    case Ge.SCENE2D:
      i.morphTo2D(t);
      break;
    case Ge.COLUMBUS_VIEW:
      i.morphToColumbusView(t);
      break;
    case Ge.SCENE3D:
      i.morphTo3D(t);
      break;
  }
}, Ir = c({
  name: "Scene",
  create(i, e) {
    return i.scene && e.mode && ci(i.scene, e.mode, e.morphDuration), i.scene;
  },
  update(i, e, t) {
    e.mode !== t.mode && e.mode && ci(i, e.mode, e.morphDuration);
  },
  cesiumProps: Br,
  cesiumEventProps: Ar,
  otherProps: Fr,
  setCesiumPropsAfterCreate: !0
}), $a = Ir, Wr = [
  "bounceAnimationTime",
  "enableCollisionDetection",
  "enableInputs",
  "enableLook",
  "enableRotate",
  "enableTilt",
  "enableTranslate",
  "enableZoom",
  "inertiaSpin",
  "inertiaTranslate",
  "inertiaZoom",
  "lookEventTypes",
  "maximumMovementRatio",
  "maximumZoomDistance",
  "minimumCollisionTerrainHeight",
  "minimumPickingTerrainHeight",
  "minimumTrackBallHeight",
  "minimumZoomDistance",
  "rotateEventTypes",
  "tiltEventTypes",
  "translateEventTypes",
  "zoomEventTypes",
  "minimumPickingTerrainDistanceWithInertia"
], Vr = c({
  name: "ScreenSpaceCameraController",
  create: (i) => {
    var e;
    return (e = i.scene) == null ? void 0 : e.screenSpaceCameraController;
  },
  cesiumProps: Wr,
  setCesiumPropsAfterCreate: !0
}), Ta = Vr, Ur = ({ action: i, modifier: e, type: t }) => {
  const o = Ee();
  return ne(() => {
    if (!(!o.screenSpaceEventHandler || o.screenSpaceEventHandler.isDestroyed())) {
      if (i)
        return o.screenSpaceEventHandler.setInputAction(i, t, e), () => {
          !o.screenSpaceEventHandler || o.screenSpaceEventHandler.isDestroyed() || o.screenSpaceEventHandler.removeInputAction(t, e);
        };
      o.screenSpaceEventHandler.removeInputAction(t, e);
    }
  }, [i, o.screenSpaceEventHandler, e, t]), null;
}, Ma = Ur, jr = c({
  name: "ScreenSpaceEventHandler",
  create(i, e) {
    var t;
    return e.useDefault ? (t = i.cesiumWidget) == null ? void 0 : t.screenSpaceEventHandler : i.scene ? new mi(i.scene.canvas) : void 0;
  },
  destroy(i) {
    i.isDestroyed() || i.destroy();
  },
  provide(i) {
    return {
      screenSpaceEventHandler: i
    };
  }
}), ka = jr, Hr = [
  "darkness",
  "fadingEnabled",
  "maximumDistance",
  "enabled",
  "normalOffset",
  "softShadows",
  "size"
], xr = c({
  name: "ShadowMap",
  create: (i) => {
    var e;
    return (e = i.scene) == null ? void 0 : e.shadowMap;
  },
  cesiumProps: Hr
}), _a = xr, zr = [
  "brightnessShift",
  "hueShift",
  "saturationShift",
  "show",
  "perFragmentAtmosphere",
  "atmosphereLightIntensity",
  "atmosphereRayleighCoefficient",
  "atmosphereMieCoefficient",
  "atmosphereRayleighScaleHeight",
  "atmosphereMieScaleHeight",
  "atmosphereMieAnisotropy"
], Nr = c({
  name: "SkyAtmosphere",
  create: (i) => {
    var e;
    return (e = i.scene) == null ? void 0 : e.skyAtmosphere;
  },
  cesiumProps: zr,
  setCesiumPropsAfterCreate: !0
}), Oa = Nr, Yr = ["sources", "show"], Kr = c({
  name: "SkyBox",
  create: (i) => {
    var e;
    return (e = i.scene) == null ? void 0 : e.skyBox;
  },
  cesiumProps: Yr,
  setCesiumPropsAfterCreate: !0
}), Ga = Kr, qr = ["glowFactor", "show"], Jr = c({
  name: "Sun",
  create(i) {
    if (!i.scene)
      return;
    const e = new ii();
    return i.scene.sun = e, e;
  },
  destroy(i, e) {
    e.scene && !e.scene.isDestroyed() && (e.scene.sun = new ii());
  },
  cesiumProps: qr,
  setCesiumPropsAfterCreate: !0
}), La = Jr, Zr = [
  "clippingPlanes",
  "maximumMemoryUsage",
  "modelMatrix",
  "shadows",
  "show",
  "style",
  "intervals"
], Xr = ["clock", "shading"], Qr = ["onReady"], es = {
  onFrameChange: "frameChanged"
}, is = c({
  name: "TimeDynamicPointCloud",
  create(i, e) {
    var o;
    if (!i.cesiumWidget || !i.primitiveCollection || !((o = i.cesiumWidget) != null && o.clock))
      return;
    const t = new $t({
      ...e,
      clock: e.clock ?? i.cesiumWidget.clock
    });
    return e.onReady && t.readyPromise.then(e.onReady), i.primitiveCollection.add(t), t;
  },
  destroy(i, e) {
    e.primitiveCollection && !e.primitiveCollection.isDestroyed() && e.primitiveCollection.remove(i), i.isDestroyed() || i.destroy();
  },
  cesiumProps: Zr,
  cesiumReadonlyProps: Xr,
  cesiumEventProps: es,
  otherProps: Qr,
  useCommonEvent: !0
}), Ba = is, ts = [
  "terrainProvider",
  "terrainShadows",
  "clockTrackedDataSource",
  "targetFrameRate",
  "useDefaultRenderLoop",
  "resolutionScale",
  "allowDataSourcesToSuspendAnimation",
  "trackedEntity",
  "selectedEntity",
  "shadows",
  "useBrowserRecommendedResolution"
], ns = [
  "animation",
  "baseLayerPicker",
  "fullscreenButton",
  "vrButton",
  "geocoder",
  "homeButton",
  "infoBox",
  "sceneModePicker",
  "selectionIndicator",
  "timeline",
  "navigationHelpButton",
  "navigationInstructionsInitiallyVisible",
  "scene3DOnly",
  "shouldAnimate",
  "clockViewModel",
  "selectedImageryProviderViewModel",
  "imageryProviderViewModels",
  "selectedTerrainProviderViewModel",
  "terrainProviderViewModels",
  "imageryProvider",
  "skyBox",
  "skyAtmosphere",
  "fullscreenElement",
  "showRenderLoopErrors",
  "automaticallyTrackDataSourceClocks",
  "contextOptions",
  "sceneMode",
  "mapProjection",
  "globe",
  "orderIndependentTranslucency",
  "creditContainer",
  "creditViewport",
  "dataSources",
  "mapMode2D",
  "projectionPicker",
  "requestRenderMode",
  "maximumRenderTimeChange",
  "depthPlaneEllipsoidOffset",
  "msaaSamples",
  "blurActiveElementOnCanvasFocus"
], os = {
  onSelectedEntityChange: "selectedEntityChanged",
  onTrackedEntityChange: "trackedEntityChanged"
}, rs = ["className", "id", "style", "full", "containerProps", "extend"], ss = c({
  name: "Viewer",
  create(i, { imageryProvider: e, ...t }, o) {
    if (!o)
      return;
    const s = new Tt(o, {
      ...t,
      imageryProvider: e === !1 ? void 0 : e
    });
    if (!s)
      return;
    e === !1 && s.imageryLayers.removeAll(), s && t.extend && (Array.isArray(t.extend) ? t.extend.forEach((g) => {
      s.extend(g, {});
    }) : s.extend(t.extend, {}));
    const d = new de(s.scene);
    return [s, d];
  },
  destroy(i, e, t, o) {
    o && !o.isDestroyed() && o.destroy(), i.isDestroyed() || i.destroy();
  },
  provide(i, e, t, o) {
    return {
      viewer: i,
      cesiumWidget: i.cesiumWidget,
      dataSourceCollection: i.dataSources,
      entityCollection: i.entities,
      scene: i.scene,
      camera: i.scene.camera,
      imageryLayerCollection: i.scene.globe.imageryLayers,
      primitiveCollection: i.scene.primitives,
      globe: i.scene.globe,
      __$internal: {
        onUpdate: t == null ? void 0 : t.onUpdate
      },
      [te]: o
    };
  },
  containerProps: ({ id: i, className: e, style: t, full: o, containerProps: s }) => ({
    className: e,
    id: i,
    style: {
      ...o ? {
        position: "absolute",
        bottom: "0",
        left: "0",
        right: "0",
        top: "0"
      } : {},
      ...t
    },
    ...s
  }),
  cesiumProps: ts,
  cesiumReadonlyProps: ns,
  cesiumEventProps: os,
  otherProps: rs,
  renderContainer: !0,
  useCommonEvent: !0,
  useRootEvent: !0
}), Aa = ss, as = [
  "positions",
  "maximumHeights",
  "minimumHeights",
  "show",
  "fill",
  "material",
  "outline",
  "outlineColor",
  "outlineWidth",
  "granularity",
  "shadows",
  "distanceDisplayCondition"
], cs = {
  onDefinitionChange: "definitionChanged"
}, ls = c({
  name: "WallGraphics",
  create(i, e) {
    if (!i.entity)
      return;
    const t = new Mt(e);
    return i.entity.wall = t, t;
  },
  destroy(i, e) {
    e.entity && (e.entity.wall = void 0);
  },
  cesiumProps: as,
  cesiumEventProps: cs
}), Fa = ls;
export {
  Ca as AmbientOcclusion,
  ys as Billboard,
  vs as BillboardCollection,
  gs as BillboardGraphics,
  fa as BlackAndWhiteStage,
  Pa as Bloom,
  Sa as BlurStage,
  Cs as BoxGraphics,
  ha as BrightnessStage,
  Ps as Camera,
  Ss as CameraFlyHome,
  Es as CameraFlyTo,
  ws as CameraFlyToBoundingSphere,
  bs as CameraLookAt,
  Ds as Cesium3DTileset,
  Rs as Cesium3DTilesetGraphics,
  Ae as CesiumContext,
  $s as CesiumWidget,
  Ts as ClassificationPrimitive,
  Ms as Clock,
  ks as CloudCollection,
  _t as Consumer,
  _s as CorridorGraphics,
  Os as CumulusCloud,
  Gs as CustomDataSource,
  Ls as CylinderGraphics,
  Bs as CzmlDataSource,
  Ea as DepthOfFieldStage,
  ba as EdgeDetectionStage,
  As as EllipseGraphics,
  Fs as EllipsoidGraphics,
  Is as Entity,
  Ws as EntityDescription,
  de as EventManager,
  Vs as Fog,
  ya as Fxaa,
  Us as GeoJsonDataSource,
  js as Globe,
  Hs as GroundPolylinePrimitive,
  xs as GroundPrimitive,
  zs as GroundPrimitiveCollection,
  Ns as ImageryLayer,
  Ys as ImageryLayerCollection,
  Ks as KmlDataSource,
  qs as Label,
  Js as LabelCollection,
  Zs as LabelGraphics,
  pa as LensFlareStage,
  Xs as Model,
  Qs as ModelGraphics,
  ea as Moon,
  va as NightVisionStage,
  ia as ParticleSystem,
  ta as PathGraphics,
  na as PlaneGraphics,
  oa as PointGraphics,
  ra as PointPrimitive,
  sa as PointPrimitiveCollection,
  aa as PolygonGraphics,
  ca as Polyline,
  la as PolylineCollection,
  ua as PolylineGraphics,
  da as PolylineVolumeGraphics,
  ma as PostProcessStage,
  ga as PostProcessStageComposite,
  Da as Primitive,
  hs as Provider,
  Ra as RectangleGraphics,
  $a as Scene,
  Ta as ScreenSpaceCameraController,
  Ma as ScreenSpaceEvent,
  ka as ScreenSpaceEventHandler,
  _a as ShadowMap,
  wa as SilhouetteStage,
  Oa as SkyAtmosphere,
  Ga as SkyBox,
  La as Sun,
  Ba as TimeDynamicPointCloud,
  Aa as Viewer,
  Fa as WallGraphics,
  be as createCameraOperation,
  c as createCesiumComponent,
  F as createPostProcessStage,
  Le as entries,
  te as eventManagerContextKey,
  Be as eventNames,
  me as includes,
  It as isDestroyable,
  Wt as isDestroyed,
  At as pick,
  Ft as shallowEquals,
  Ee as useCesium,
  Vt as useCesiumComponent,
  ps as withCesium
};
